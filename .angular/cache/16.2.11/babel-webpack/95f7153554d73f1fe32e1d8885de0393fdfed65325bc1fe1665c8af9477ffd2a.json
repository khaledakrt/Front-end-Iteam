{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./service/app.layout.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nconst _c0 = [\"menubutton\"];\nconst _c1 = [\"topbarmenubutton\"];\nconst _c2 = [\"topbarmenu\"];\nconst _c3 = function (a0) {\n  return {\n    \"layout-topbar-menu-mobile-active\": a0\n  };\n};\nexport class AppTopBarComponent {\n  constructor(layoutService) {\n    this.layoutService = layoutService;\n  }\n  changeTheme(theme, colorScheme) {\n    const themeLink = document.getElementById('theme-css');\n    const newHref = themeLink.getAttribute('href').replace(this.layoutService.config.theme, theme);\n    this.layoutService.config.colorScheme;\n    this.replaceThemeLink(newHref, () => {\n      this.layoutService.config.theme = theme;\n      this.layoutService.config.colorScheme = colorScheme;\n      this.layoutService.onConfigUpdate();\n    });\n  }\n  replaceThemeLink(href, onComplete) {\n    const id = 'theme-css';\n    const themeLink = document.getElementById('theme-css');\n    const cloneLinkElement = themeLink.cloneNode(true);\n    cloneLinkElement.setAttribute('href', href);\n    cloneLinkElement.setAttribute('id', id + '-clone');\n    themeLink.parentNode.insertBefore(cloneLinkElement, themeLink.nextSibling);\n    cloneLinkElement.addEventListener('load', () => {\n      themeLink.remove();\n      cloneLinkElement.setAttribute('id', id);\n      onComplete();\n    });\n  }\n  static #_ = this.ɵfac = function AppTopBarComponent_Factory(t) {\n    return new (t || AppTopBarComponent)(i0.ɵɵdirectiveInject(i1.LayoutService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppTopBarComponent,\n    selectors: [[\"app-topbar\"]],\n    viewQuery: function AppTopBarComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.menuButton = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.topbarMenuButton = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.menu = _t.first);\n      }\n    },\n    decls: 24,\n    vars: 4,\n    consts: [[1, \"layout-topbar\"], [\"routerLink\", \"\", 1, \"layout-topbar-logo\"], [\"src\", \"assets/layout/images/logo2.png\", \"alt\", \"logo\"], [1, \"p-link\", \"layout-menu-button\", \"layout-topbar-button\", 3, \"click\"], [\"menubutton\", \"\"], [1, \"pi\", \"pi-bars\"], [1, \"p-link\", \"layout-topbar-menu-button\", \"layout-topbar-button\", 3, \"click\"], [\"topbarmenubutton\", \"\"], [1, \"pi\", \"pi-ellipsis-v\"], [3, \"click\"], [1, \"app-container\", 3, \"ngClass\"], [1, \"layout-topbar-menu\", 3, \"ngClass\"], [\"topbarmenu\", \"\"], [1, \"p-link\", \"layout-topbar-button\"], [1, \"pi\", \"pi-user\"]],\n    template: function AppTopBarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"a\", 1);\n        i0.ɵɵelement(2, \"img\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 3, 4);\n        i0.ɵɵlistener(\"click\", function AppTopBarComponent_Template_button_click_3_listener() {\n          return ctx.layoutService.onMenuToggle();\n        });\n        i0.ɵɵelement(5, \"i\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"button\", 6, 7);\n        i0.ɵɵlistener(\"click\", function AppTopBarComponent_Template_button_click_6_listener() {\n          return ctx.layoutService.showProfileSidebar();\n        });\n        i0.ɵɵelement(8, \"i\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function AppTopBarComponent_Template_button_click_9_listener() {\n          return ctx.changeTheme(\"md-dark-indigo\", \"dark\");\n        });\n        i0.ɵɵtext(10, \"white\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function AppTopBarComponent_Template_button_click_11_listener() {\n          return ctx.changeTheme(\"md-light-indigo\", \"light\");\n        });\n        i0.ɵɵtext(12, \"dark\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 10)(14, \"h1\");\n        i0.ɵɵtext(15, \"Theme Switching\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function AppTopBarComponent_Template_button_click_16_listener() {\n          return ctx.toggleTheme();\n        });\n        i0.ɵɵtext(17, \"Toggle Theme\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 11, 12)(20, \"button\", 13);\n        i0.ɵɵelement(21, \"i\", 14);\n        i0.ɵɵelementStart(22, \"span\");\n        i0.ɵɵtext(23, \"Profile\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngClass\", ctx.currentTheme);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c3, ctx.layoutService.state.profileSidebarVisible));\n      }\n    },\n    dependencies: [i2.NgClass, i3.RouterLink],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["AppTopBarComponent","constructor","layoutService","changeTheme","theme","colorScheme","themeLink","document","getElementById","newHref","getAttribute","replace","config","replaceThemeLink","onConfigUpdate","href","onComplete","id","cloneLinkElement","cloneNode","setAttribute","parentNode","insertBefore","nextSibling","addEventListener","remove","_","i0","ɵɵdirectiveInject","i1","LayoutService","_2","selectors","viewQuery","AppTopBarComponent_Query","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵlistener","AppTopBarComponent_Template_button_click_3_listener","onMenuToggle","AppTopBarComponent_Template_button_click_6_listener","showProfileSidebar","AppTopBarComponent_Template_button_click_9_listener","ɵɵtext","AppTopBarComponent_Template_button_click_11_listener","AppTopBarComponent_Template_button_click_16_listener","toggleTheme","ɵɵadvance","ɵɵproperty","currentTheme","ɵɵpureFunction1","_c3","state","profileSidebarVisible"],"sources":["D:\\systemConfig\\me\\sakai-ng-16.0.0\\src\\app\\layout\\app.topbar.component.ts","D:\\systemConfig\\me\\sakai-ng-16.0.0\\src\\app\\layout\\app.topbar.component.html"],"sourcesContent":["import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { MenuItem } from 'primeng/api';\nimport { LayoutService } from \"./service/app.layout.service\";\n\n@Component({\n    selector: 'app-topbar',\n    templateUrl: './app.topbar.component.html'\n})\nexport class AppTopBarComponent {\n\n    items!: MenuItem[];\n\n    @ViewChild('menubutton') menuButton!: ElementRef;\n\n    @ViewChild('topbarmenubutton') topbarMenuButton!: ElementRef;\n\n    @ViewChild('topbarmenu') menu!: ElementRef;\n\n    constructor(public layoutService: LayoutService) { }\n\n    changeTheme(theme: string, colorScheme: string) {\n        const themeLink = <HTMLLinkElement>document.getElementById('theme-css');\n        const newHref = themeLink.getAttribute('href')!.replace(this.layoutService.config.theme, theme);\n        this.layoutService.config.colorScheme\n        this.replaceThemeLink(newHref, () => {\n            this.layoutService.config.theme = theme;\n            this.layoutService.config.colorScheme = colorScheme;\n            this.layoutService.onConfigUpdate();\n        });\n    }\n\n    replaceThemeLink(href: string, onComplete: Function) {\n        const id = 'theme-css';\n        const themeLink = <HTMLLinkElement>document.getElementById('theme-css');\n        const cloneLinkElement = <HTMLLinkElement>themeLink.cloneNode(true);\n\n        cloneLinkElement.setAttribute('href', href);\n        cloneLinkElement.setAttribute('id', id + '-clone');\n\n        themeLink.parentNode!.insertBefore(cloneLinkElement, themeLink.nextSibling);\n\n        cloneLinkElement.addEventListener('load', () => {\n            themeLink.remove();\n            cloneLinkElement.setAttribute('id', id);\n            onComplete();\n        });\n    }\n}\n","<div class=\"layout-topbar\">\n    <a class=\"layout-topbar-logo\" routerLink=\"\">\n        <!-- <img src=\"assets/layout/images/{{layoutService.config.colorScheme === 'light' ? 'logo-dark' : 'logo-white'}}.svg\" alt=\"logo\"> -->\n        <img src=\"assets/layout/images/logo2.png\" alt=\"logo\">\n\n        <!-- <span>MED'INOUTLOOK</span> -->\n    </a>\n\n    <button #menubutton class=\"p-link layout-menu-button layout-topbar-button\" (click)=\"layoutService.onMenuToggle()\">\n        <i class=\"pi pi-bars\"></i>\n    </button>\n\n    <button #topbarmenubutton class=\"p-link layout-topbar-menu-button layout-topbar-button\" (click)=\"layoutService.showProfileSidebar()\">\n        <i class=\"pi pi-ellipsis-v\"></i>\n    </button>\n    <button (click)=\"changeTheme('md-dark-indigo', 'dark')\">white</button>\n    <button (click)=\"changeTheme('md-light-indigo', 'light')\">dark</button>\n   \n    <div class=\"app-container\" [ngClass]=\"currentTheme\">\n        <h1>Theme Switching</h1>\n        <button (click)=\"toggleTheme()\">Toggle Theme</button>\n      </div>\n      \n    <div #topbarmenu class=\"layout-topbar-menu\" [ngClass]=\"{'layout-topbar-menu-mobile-active': layoutService.state.profileSidebarVisible}\">\n\n        <button class=\"p-link layout-topbar-button\">\n            <i class=\"pi pi-user\"></i>\n            <span>Profile</span>\n        </button>\n\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}