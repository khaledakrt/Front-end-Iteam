{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProjectService {\n  constructor(http) {\n    this.http = http;\n    this.apiURL = 'http://localhost:3002/api/project';\n  }\n  getProjects() {\n    return this.http.get(this.apiURL);\n  }\n  addProject(project) {\n    return this.http.post(this.apiURL, project);\n  }\n  updatProject(id, project) {\n    const url = `${this.apiURL}/${id}`;\n    return this.http.put(url, project);\n  }\n  deleteProject(id) {\n    return this.http.delete(`${this.apiURL}/${id}`);\n  }\n  static #_ = this.ɵfac = function ProjectService_Factory(t) {\n    return new (t || ProjectService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProjectService,\n    factory: ProjectService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ProjectService","constructor","http","apiURL","getProjects","get","addProject","project","post","updatProject","id","url","put","deleteProject","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\systemConfig\\me\\medin2024-tailwind\\src\\app\\demo\\service\\project.service.ts"],"sourcesContent":["import { Injectable } from  \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport {Project} from  '../api/project'\r\n\r\n@Injectable({\r\n    providedIn:'root',\r\n})\r\n\r\nexport class ProjectService {\r\n    private apiURL='http://localhost:3002/api/project';\r\n\r\n    constructor(private http:HttpClient){\r\n\r\n    }\r\n\r\n    getProjects():Observable<Project[]>{\r\n   return this.http.get<Project[]>(this.apiURL)\r\n    }\r\n\r\n    addProject(project:Project):Observable<Project>{\r\n        return this.http.post<Project>(this.apiURL,project)\r\n    }\r\n\r\n    updatProject(id:string,project:Project):Observable<Project>{\r\n       const url=`${this.apiURL}/${id}`;\r\n        return this.http.put<Project>(url,project)\r\n    }\r\n\r\n    deleteProject(id:string):Observable<void>{\r\n        return this.http.delete<void>(`${this.apiURL}/${id}`) \r\n    }\r\n}"],"mappings":";;AASA,OAAM,MAAOA,cAAc;EAGvBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAC,mCAAmC;EAIlD;EAEAC,WAAWA,CAAA;IACZ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,IAAI,CAACF,MAAM,CAAC;EAC3C;EAEAG,UAAUA,CAACC,OAAe;IACtB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAU,IAAI,CAACL,MAAM,EAACI,OAAO,CAAC;EACvD;EAEAE,YAAYA,CAACC,EAAS,EAACH,OAAe;IACnC,MAAMI,GAAG,GAAC,GAAG,IAAI,CAACR,MAAM,IAAIO,EAAE,EAAE;IAC/B,OAAO,IAAI,CAACR,IAAI,CAACU,GAAG,CAAUD,GAAG,EAACJ,OAAO,CAAC;EAC9C;EAEAM,aAAaA,CAACH,EAAS;IACnB,OAAO,IAAI,CAACR,IAAI,CAACY,MAAM,CAAO,GAAG,IAAI,CAACX,MAAM,IAAIO,EAAE,EAAE,CAAC;EACzD;EAAC,QAAAK,CAAA,G;qBAtBQf,cAAc,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdpB,cAAc;IAAAqB,OAAA,EAAdrB,cAAc,CAAAsB,IAAA;IAAAC,UAAA,EAHZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}