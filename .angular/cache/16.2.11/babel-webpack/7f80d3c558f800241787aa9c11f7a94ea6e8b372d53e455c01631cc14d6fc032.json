{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TeamMemberService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3002/api/team'; // Update the URL accordingly\n  }\n\n  getTeamMembers() {\n    return this.http.get(this.apiUrl).pipe(catchError(error => {\n      console.error('Error fetching team members:', error);\n      return throwError(error);\n    }));\n  }\n  // Updated addTeamMember to accept FormData for image upload\n  addTeamMember(teamMemberData) {\n    return this.http.post(this.apiUrl, teamMemberData).pipe(catchError(error => {\n      console.error('Error adding team member:', error);\n      return throwError(error);\n    }));\n  }\n  updateTeamMember(id, teamMember) {\n    const url = `${this.apiUrl}/${id}`;\n    return this.http.put(url, teamMember).pipe(catchError(error => {\n      console.error(`Error updating team member with id ${id}:`, error);\n      return throwError(error);\n    }));\n  }\n  deleteTeamMember(id) {\n    const url = `${this.apiUrl}/${id}`;\n    return this.http.delete(url).pipe(catchError(error => {\n      console.error(`Error deleting team member with id ${id}:`, error);\n      return throwError(error);\n    }));\n  }\n  static #_ = this.ɵfac = function TeamMemberService_Factory(t) {\n    return new (t || TeamMemberService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TeamMemberService,\n    factory: TeamMemberService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["TeamMemberService","constructor","http","apiUrl","getTeamMembers","get","pipe","catchError","error","console","throwError","addTeamMember","teamMemberData","post","updateTeamMember","id","teamMember","url","put","deleteTeamMember","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\systemConfig\\me\\medin2024-tailwind\\src\\app\\demo\\service\\TeamMember.Service.ts"],"sourcesContent":["// team-member.service.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { TeamMember } from '../api/teamMember';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TeamMemberService {\r\n  private apiUrl = 'http://localhost:3002/api/team'; // Update the URL accordingly\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getTeamMembers(): Observable<TeamMember[]> {\r\n    return this.http.get<TeamMember[]>(this.apiUrl).pipe(\r\n      catchError((error) => {\r\n        console.error('Error fetching team members:', error);\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n\r\n  // Updated addTeamMember to accept FormData for image upload\r\n  addTeamMember(teamMemberData: FormData): Observable<TeamMember> {\r\n    return this.http.post<TeamMember>(this.apiUrl, teamMemberData).pipe(\r\n      catchError((error) => {\r\n        console.error('Error adding team member:', error);\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n\r\n  updateTeamMember(id: string, teamMember: TeamMember): Observable<TeamMember> {\r\n    const url = `${this.apiUrl}/${id}`;\r\n    return this.http.put<TeamMember>(url, teamMember).pipe(\r\n      catchError((error) => {\r\n        console.error(`Error updating team member with id ${id}:`, error);\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n\r\n  deleteTeamMember(id: string): Observable<void> {\r\n    const url = `${this.apiUrl}/${id}`;\r\n    return this.http.delete<void>(url).pipe(\r\n      catchError((error) => {\r\n        console.error(`Error deleting team member with id ${id}:`, error);\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}"],"mappings":";;AASA,OAAM,MAAOA,iBAAiB;EAG5BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,gCAAgC,CAAC,CAAC;EAEZ;;EAEvCC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAe,IAAI,CAACF,MAAM,CAAC,CAACG,IAAI,CAClDC,UAAU,CAAEC,KAAK,IAAI;MACnBC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,OAAOE,UAAU,CAACF,KAAK,CAAC;IAC1B,CAAC,CAAC,CACH;EACH;EAEA;EACAG,aAAaA,CAACC,cAAwB;IACpC,OAAO,IAAI,CAACV,IAAI,CAACW,IAAI,CAAa,IAAI,CAACV,MAAM,EAAES,cAAc,CAAC,CAACN,IAAI,CACjEC,UAAU,CAAEC,KAAK,IAAI;MACnBC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,OAAOE,UAAU,CAACF,KAAK,CAAC;IAC1B,CAAC,CAAC,CACH;EACH;EAEAM,gBAAgBA,CAACC,EAAU,EAAEC,UAAsB;IACjD,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACd,MAAM,IAAIY,EAAE,EAAE;IAClC,OAAO,IAAI,CAACb,IAAI,CAACgB,GAAG,CAAaD,GAAG,EAAED,UAAU,CAAC,CAACV,IAAI,CACpDC,UAAU,CAAEC,KAAK,IAAI;MACnBC,OAAO,CAACD,KAAK,CAAC,sCAAsCO,EAAE,GAAG,EAAEP,KAAK,CAAC;MACjE,OAAOE,UAAU,CAACF,KAAK,CAAC;IAC1B,CAAC,CAAC,CACH;EACH;EAEAW,gBAAgBA,CAACJ,EAAU;IACzB,MAAME,GAAG,GAAG,GAAG,IAAI,CAACd,MAAM,IAAIY,EAAE,EAAE;IAClC,OAAO,IAAI,CAACb,IAAI,CAACkB,MAAM,CAAOH,GAAG,CAAC,CAACX,IAAI,CACrCC,UAAU,CAAEC,KAAK,IAAI;MACnBC,OAAO,CAACD,KAAK,CAAC,sCAAsCO,EAAE,GAAG,EAAEP,KAAK,CAAC;MACjE,OAAOE,UAAU,CAACF,KAAK,CAAC;IAC1B,CAAC,CAAC,CACH;EACH;EAAC,QAAAa,CAAA,G;qBA1CUrB,iBAAiB,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAjB1B,iBAAiB;IAAA2B,OAAA,EAAjB3B,iBAAiB,CAAA4B,IAAA;IAAAC,UAAA,EAFhB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}