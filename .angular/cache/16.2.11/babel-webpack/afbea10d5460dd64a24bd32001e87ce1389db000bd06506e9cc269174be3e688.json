{"ast":null,"code":"import { NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs';\nimport { AppSidebarComponent } from \"./app.sidebar.component\";\nimport { AppTopBarComponent } from './app.topbar.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./service/app.layout.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"./app.topbar.component\";\nimport * as i5 from \"./app.footer.component\";\nimport * as i6 from \"./app.sidebar.component\";\nexport let AppLayoutComponent = /*#__PURE__*/(() => {\n  class AppLayoutComponent {\n    constructor(layoutService, renderer, router) {\n      this.layoutService = layoutService;\n      this.renderer = renderer;\n      this.router = router;\n      this.overlayMenuOpenSubscription = this.layoutService.overlayOpen$.subscribe(() => {\n        if (!this.menuOutsideClickListener) {\n          this.menuOutsideClickListener = this.renderer.listen('document', 'click', event => {\n            const isOutsideClicked = !(this.appSidebar.el.nativeElement.isSameNode(event.target) || this.appSidebar.el.nativeElement.contains(event.target) || this.appTopbar.menuButton.nativeElement.isSameNode(event.target) || this.appTopbar.menuButton.nativeElement.contains(event.target));\n            if (isOutsideClicked) {\n              this.hideMenu();\n            }\n          });\n        }\n        if (!this.profileMenuOutsideClickListener) {\n          this.profileMenuOutsideClickListener = this.renderer.listen('document', 'click', event => {\n            const isOutsideClicked = !(this.appTopbar.menu.nativeElement.isSameNode(event.target) || this.appTopbar.menu.nativeElement.contains(event.target) || this.appTopbar.topbarMenuButton.nativeElement.isSameNode(event.target) || this.appTopbar.topbarMenuButton.nativeElement.contains(event.target));\n            if (isOutsideClicked) {\n              this.hideProfileMenu();\n            }\n          });\n        }\n        if (this.layoutService.state.staticMenuMobileActive) {\n          this.blockBodyScroll();\n        }\n      });\n      this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(() => {\n        this.hideMenu();\n        this.hideProfileMenu();\n      });\n    }\n    hideMenu() {\n      this.layoutService.state.overlayMenuActive = false;\n      this.layoutService.state.staticMenuMobileActive = false;\n      this.layoutService.state.menuHoverActive = false;\n      if (this.menuOutsideClickListener) {\n        this.menuOutsideClickListener();\n        this.menuOutsideClickListener = null;\n      }\n      this.unblockBodyScroll();\n    }\n    hideProfileMenu() {\n      this.layoutService.state.profileSidebarVisible = false;\n      if (this.profileMenuOutsideClickListener) {\n        this.profileMenuOutsideClickListener();\n        this.profileMenuOutsideClickListener = null;\n      }\n    }\n    blockBodyScroll() {\n      if (document.body.classList) {\n        document.body.classList.add('blocked-scroll');\n      } else {\n        document.body.className += ' blocked-scroll';\n      }\n    }\n    unblockBodyScroll() {\n      if (document.body.classList) {\n        document.body.classList.remove('blocked-scroll');\n      } else {\n        document.body.className = document.body.className.replace(new RegExp('(^|\\\\b)' + 'blocked-scroll'.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n      }\n    }\n    get containerClass() {\n      return {\n        'layout-theme-light': this.layoutService.config.colorScheme === 'light',\n        'layout-theme-dark': this.layoutService.config.colorScheme === 'dark',\n        'layout-overlay': this.layoutService.config.menuMode === 'overlay',\n        'layout-static': this.layoutService.config.menuMode === 'static',\n        'layout-static-inactive': this.layoutService.state.staticMenuDesktopInactive && this.layoutService.config.menuMode === 'static',\n        'layout-overlay-active': this.layoutService.state.overlayMenuActive,\n        'layout-mobile-active': this.layoutService.state.staticMenuMobileActive,\n        'p-input-filled': this.layoutService.config.inputStyle === 'filled',\n        'p-ripple-disabled': !this.layoutService.config.ripple\n      };\n    }\n    ngOnDestroy() {\n      if (this.overlayMenuOpenSubscription) {\n        this.overlayMenuOpenSubscription.unsubscribe();\n      }\n      if (this.menuOutsideClickListener) {\n        this.menuOutsideClickListener();\n      }\n    }\n    static #_ = this.ɵfac = function AppLayoutComponent_Factory(t) {\n      return new (t || AppLayoutComponent)(i0.ɵɵdirectiveInject(i1.LayoutService), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i2.Router));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppLayoutComponent,\n      selectors: [[\"app-layout\"]],\n      viewQuery: function AppLayoutComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(AppSidebarComponent, 5);\n          i0.ɵɵviewQuery(AppTopBarComponent, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.appSidebar = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.appTopbar = _t.first);\n        }\n      },\n      decls: 9,\n      vars: 1,\n      consts: [[1, \"layout-wrapper\", 3, \"ngClass\"], [1, \"layout-sidebar\"], [1, \"layout-main-container\"], [1, \"layout-main\"], [1, \"layout-mask\"]],\n      template: function AppLayoutComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵelement(1, \"app-topbar\");\n          i0.ɵɵelementStart(2, \"div\", 1);\n          i0.ɵɵelement(3, \"app-sidebar\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"div\", 2)(5, \"div\", 3);\n          i0.ɵɵelement(6, \"router-outlet\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"app-footer\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(8, \"div\", 4);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngClass\", ctx.containerClass);\n        }\n      },\n      dependencies: [i3.NgClass, i2.RouterOutlet, i4.AppTopBarComponent, i5.AppFooterComponent, i6.AppSidebarComponent],\n      encapsulation: 2\n    });\n  }\n  return AppLayoutComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}