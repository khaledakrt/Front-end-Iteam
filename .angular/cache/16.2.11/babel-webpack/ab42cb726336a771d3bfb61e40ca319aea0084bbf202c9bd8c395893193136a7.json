{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, HostListener } from '@angular/core';\nimport { style } from '@angular/animations';\nexport let LandingComponent = class LandingComponent {\n  constructor(layoutService, router) {\n    this.layoutService = layoutService;\n    this.router = router;\n    this.isNavbarGray = false;\n    this.isResponsiveMenuGray = false;\n  }\n  onWindowScroll() {\n    // Add a scroll event listener to toggle the class based on the scroll position\n    this.isNavbarGray = window.scrollY > 100; // Adjust the scroll position threshold\n  }\n\n  toggleNavbarColor() {\n    this.isNavbarGray = true;\n  }\n};\n__decorate([HostListener('window:scroll', [])], LandingComponent.prototype, \"onWindowScroll\", null);\nLandingComponent = __decorate([Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.scss'],\n  const: style1 = style({\n    opacity: 1,\n    transform: \"translateX(0)\"\n  }),\n  const: style2 = style({\n    opacity: 0,\n    transform: \"translateX(-100%)\"\n  })\n})], LandingComponent);","map":{"version":3,"names":["Component","HostListener","style","LandingComponent","constructor","layoutService","router","isNavbarGray","isResponsiveMenuGray","onWindowScroll","window","scrollY","toggleNavbarColor","__decorate","selector","templateUrl","styleUrls","const","style1","opacity","transform","style2"],"sources":["D:\\systemConfig\\me\\medin2024-tailwind\\src\\app\\demo\\components\\view\\landing\\landing.component.ts"],"sourcesContent":["import { Component, HostListener } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LayoutService } from 'src/app/layout/service/app.layout.service';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\n\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls:['./landing.component.scss'],\n  const style1 = style({\n    opacity: 1,\n    transform: \"translateX(0)\"\n  })\n  \n  const style2 = style({\n    opacity: 0,\n    transform: \"translateX(-100%)\"\n  })\n  \n})\nexport class LandingComponent {\n  isNavbarGray = false;\n  isResponsiveMenuGray: boolean = false;\n\n  constructor(public layoutService: LayoutService, public router: Router) { }\n\n  @HostListener('window:scroll', [])\n  onWindowScroll() {\n    // Add a scroll event listener to toggle the class based on the scroll position\n    this.isNavbarGray = window.scrollY > 100; // Adjust the scroll position threshold\n  }\n  toggleNavbarColor() {\n    this.isNavbarGray = true;\n}\n\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,YAAY,QAAQ,eAAe;AAGvD,SAAyBC,KAAK,QAA6B,qBAAqB;AAiBzE,WAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAI3BC,YAAmBC,aAA4B,EAASC,MAAc;IAAnD,KAAAD,aAAa,GAAbA,aAAa;IAAwB,KAAAC,MAAM,GAANA,MAAM;IAH9D,KAAAC,YAAY,GAAG,KAAK;IACpB,KAAAC,oBAAoB,GAAY,KAAK;EAEqC;EAG1EC,cAAcA,CAAA;IACZ;IACA,IAAI,CAACF,YAAY,GAAGG,MAAM,CAACC,OAAO,GAAG,GAAG,CAAC,CAAC;EAC5C;;EACAC,iBAAiBA,CAAA;IACf,IAAI,CAACL,YAAY,GAAG,IAAI;EAC5B;CAGC;AATCM,UAAA,EADCZ,YAAY,CAAC,eAAe,EAAE,EAAE,CAAC,C,qDAIjC;AAVUE,gBAAgB,GAAAU,UAAA,EAf5Bb,SAAS,CAAC;EACTc,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAC,CAAC,0BAA0B,CAAC;EACtCC,KAAK,EAACC,MAAM,GAAGhB,KAAK,CAAC;IACnBiB,OAAO,EAAE,CAAC;IACVC,SAAS,EAAE;GACZ,CAAC;EAEFH,KAAK,EAACI,MAAM,GAAGnB,KAAK,CAAC;IACnBiB,OAAO,EAAE,CAAC;IACVC,SAAS,EAAE;GACZ;CAEF,CAAC,C,EACWjB,gBAAgB,CAgB5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}