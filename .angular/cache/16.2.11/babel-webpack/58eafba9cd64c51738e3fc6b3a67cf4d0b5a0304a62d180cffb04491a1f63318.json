{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { MessageService } from 'primeng/api';\nimport { ProjectService } from 'src/app/demo/service/project.service';\nexport let ProjectComponent = class ProjectComponent {\n  constructor(projectService, messageService, imageService) {\n    this.projectService = projectService;\n    this.messageService = messageService;\n    this.imageService = imageService;\n    this.projects = [];\n    this.project = {};\n    this.projectDialog = false;\n    this.deleteProjectDialog = false;\n    this.deleteProjectsDialog = false;\n    this.selectedProjects = [];\n    this.submitted = false;\n    this.cols = [{\n      field: 'title',\n      header: 'Title'\n    }, {\n      field: 'description',\n      header: 'Description'\n    }, {\n      field: 'image',\n      header: 'Image'\n    }];\n  }\n  ngOnInit() {\n    this.projectService.getProjects().subscribe(data => {\n      this.projects = data.map(project => {\n        project.image = this.imageService.getImageUrl(project.image);\n        return project;\n      });\n    });\n  }\n  openNew() {\n    this.project = {};\n    this.submitted = false;\n    this.projectDialog = true;\n  }\n  deleteSelectedProjects() {\n    if (this.selectedProjects.length === 1) {\n      this.deleteProject(this.selectedProjects[0]);\n    } else {\n      this.deleteProjectsDialog = true;\n    }\n  }\n  confirmDeleteSelected() {\n    this.deleteProjectsDialog = false;\n    const selectedIds = this.selectedProjects.map(project => project._id);\n    console.log(selectedIds);\n    this.projectService.deleteProjects(selectedIds).subscribe(() => {\n      this.messageService.add({\n        severity: 'success',\n        summary: 'Successful',\n        detail: 'Projects Deleted',\n        life: 3000\n      });\n      this.projects = this.projects.filter(val => !this.selectedProjects.includes(val));\n      this.selectedProjects = [];\n    }, error => {\n      console.error(error);\n      // Handle error, display an error message, etc.\n    });\n  }\n\n  editProject(project) {\n    this.project = {\n      ...project\n    };\n    this.projectDialog = true;\n  }\n  deleteProject(project) {\n    this.deleteProjectDialog = true;\n    this.project = {\n      ...project\n    };\n  }\n  confirmDelete() {\n    this.deleteProjectDialog = false;\n    this.projects = this.projects.filter(val => val._id !== this.project._id);\n    this.projectService.deleteProject(this.project._id).subscribe(() => {\n      this.messageService.add({\n        severity: 'success',\n        summary: 'Successful',\n        detail: 'Project Deleted',\n        life: 3000\n      });\n      this.projects = this.projects.filter(val => val._id !== this.project._id);\n      this.project = {};\n    });\n  }\n  hideDialog() {\n    this.projectDialog = false;\n    this.submitted = false;\n  }\n  saveProject() {\n    this.submitted = true;\n    if (this.project.title?.trim() && this.project.description?.trim()) {\n      const formData = new FormData();\n      // Append image data if available\n      if (this.project.image) {\n        // Convert the base64 image data to a Blob\n        const blob = this.dataURItoBlob(this.project.image);\n        // Append the Blob to the FormData\n        formData.append('image', blob, 'image.png');\n      }\n      // Append other data properties\n      formData.append('title', this.project.title);\n      formData.append('description', this.project.description);\n      // Determine whether to add or update based on the existence of _id\n      if (this.project._id) {\n        // Update existing project\n        this.projectService.updateProjectWithImage(this.project._id, formData).subscribe(() => {\n          this.messageService.add({\n            severity: 'success',\n            summary: 'Successful',\n            detail: 'Project Updated',\n            life: 3000\n          });\n        });\n      } else {\n        // Add new project\n        this.projectService.addProjectWithImage(formData).subscribe(() => {\n          this.messageService.add({\n            severity: 'success',\n            summary: 'Successful',\n            detail: 'Project Created',\n            life: 3000\n          });\n        });\n      }\n      this.projects = [...this.projects];\n      this.projectDialog = false;\n      this.project = {};\n    }\n  }\n  dataURItoBlob(dataURI) {\n    const byteString = atob(dataURI.split(',')[1]);\n    const ab = new ArrayBuffer(byteString.length);\n    const ia = new Uint8Array(ab);\n    for (let i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n    return new Blob([ab], {\n      type: 'image/png'\n    });\n  }\n  findIndexById(id) {\n    let index = -1;\n    for (let i = 0; i < this.projects.length; i++) {\n      if (this.projects[i]._id === id) {\n        index = i;\n        break;\n      }\n    }\n    return index;\n  }\n  createId() {\n    let id = '';\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (let i = 0; i < 5; i++) {\n      id += chars.charAt(Math.floor(Math.random() * chars.length));\n    }\n    return id;\n  }\n  onGlobalFilter(table, event) {\n    table.filterGlobal(event.target.value, 'contains');\n  }\n  handleImageChange(event) {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        this.project.image = e.target.result;\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n};\nProjectComponent = __decorate([Component({\n  templateUrl: './project.component.html',\n  providers: [MessageService, ProjectService]\n})], ProjectComponent);","map":{"version":3,"names":["Component","MessageService","ProjectService","ProjectComponent","constructor","projectService","messageService","imageService","projects","project","projectDialog","deleteProjectDialog","deleteProjectsDialog","selectedProjects","submitted","cols","field","header","ngOnInit","getProjects","subscribe","data","map","image","getImageUrl","openNew","deleteSelectedProjects","length","deleteProject","confirmDeleteSelected","selectedIds","_id","console","log","deleteProjects","add","severity","summary","detail","life","filter","val","includes","error","editProject","confirmDelete","hideDialog","saveProject","title","trim","description","formData","FormData","blob","dataURItoBlob","append","updateProjectWithImage","addProjectWithImage","dataURI","byteString","atob","split","ab","ArrayBuffer","ia","Uint8Array","i","charCodeAt","Blob","type","findIndexById","id","index","createId","chars","charAt","Math","floor","random","onGlobalFilter","table","event","filterGlobal","target","value","handleImageChange","file","files","reader","FileReader","onload","e","result","readAsDataURL","__decorate","templateUrl","providers"],"sources":["D:\\systemConfig\\me\\medin2024-tailwind\\src\\app\\demo\\components\\pages\\project\\project.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Project } from 'src/app/demo/api/project';\nimport { MessageService } from 'primeng/api';\nimport { Table } from 'primeng/table';\nimport { ImageService } from 'src/app/demo/service/image.service';\nimport { ProjectService } from 'src/app/demo/service/project.service';\n\n@Component({\n  templateUrl: './project.component.html',\n  providers: [MessageService, ProjectService],\n})\nexport class ProjectComponent implements OnInit {\n  projects: Project[] = [];\n  project: Project = {};\n  projectDialog: boolean = false;\n  deleteProjectDialog: boolean = false;\n  deleteProjectsDialog: boolean = false;\n  selectedProjects: Project[] = [];\n  submitted: boolean = false;\n\n  cols: any[] = [\n    { field: 'title', header: 'Title' },\n    { field: 'description', header: 'Description' },\n    { field: 'image', header: 'Image' },\n  ];\n\n  constructor(private projectService: ProjectService, private messageService: MessageService, private imageService: ImageService) { }\n\n  ngOnInit() {\n    this.projectService.getProjects().subscribe((data) => {\n      this.projects = data.map(project => {\n        project.image = this.imageService.getImageUrl(project.image);\n        return project;\n      });\n    });\n  }\n\n  openNew() {\n    this.project = {};\n    this.submitted = false;\n    this.projectDialog = true;\n  }\n\n  deleteSelectedProjects() {\n    if (this.selectedProjects.length === 1) {\n      this.deleteProject(this.selectedProjects[0]);\n    } else {\n      this.deleteProjectsDialog = true;\n    }\n  }\n\n  confirmDeleteSelected() {\n    this.deleteProjectsDialog = false;\n    const selectedIds = this.selectedProjects.map(project => project._id);\n\n    console.log(selectedIds);\n    this.projectService.deleteProjects(selectedIds).subscribe(\n      () => {\n        this.messageService.add({ severity: 'success', summary: 'Successful', detail: 'Projects Deleted', life: 3000 });\n        this.projects = this.projects.filter((val) => !this.selectedProjects.includes(val));\n        this.selectedProjects = [];\n      },\n      (error) => {\n        console.error(error);\n        // Handle error, display an error message, etc.\n      }\n    );\n  }\n\n  editProject(project: Project) {\n    this.project = { ...project };\n    this.projectDialog = true;\n  }\n\n  deleteProject(project: Project) {\n    this.deleteProjectDialog = true;\n    this.project = { ...project };\n  }\n\n  confirmDelete() {\n    this.deleteProjectDialog = false;\n    this.projects = this.projects.filter((val) => val._id !== this.project._id);\n    this.projectService.deleteProject(this.project._id).subscribe(() => {\n      this.messageService.add({ severity: 'success', summary: 'Successful', detail: 'Project Deleted', life: 3000 });\n      this.projects = this.projects.filter((val) => val._id !== this.project._id);\n      this.project = {};\n    });\n  }\n\n  hideDialog() {\n    this.projectDialog = false;\n    this.submitted = false;\n  }\n\n  saveProject() {\n    this.submitted = true;\n\n    if (this.project.title?.trim() && this.project.description?.trim()) {\n      const formData = new FormData();\n\n      // Append image data if available\n      if (this.project.image) {\n        // Convert the base64 image data to a Blob\n        const blob = this.dataURItoBlob(this.project.image);\n\n        // Append the Blob to the FormData\n        formData.append('image', blob, 'image.png');\n      }\n\n      // Append other data properties\n      formData.append('title', this.project.title);\n      formData.append('description', this.project.description);\n\n      // Determine whether to add or update based on the existence of _id\n      if (this.project._id) {\n        // Update existing project\n        this.projectService.updateProjectWithImage(this.project._id, formData).subscribe(() => {\n          this.messageService.add({ severity: 'success', summary: 'Successful', detail: 'Project Updated', life: 3000 });\n        });\n      } else {\n        // Add new project\n        this.projectService.addProjectWithImage(formData).subscribe(() => {\n          this.messageService.add({ severity: 'success', summary: 'Successful', detail: 'Project Created', life: 3000 });\n        });\n      }\n\n      this.projects = [...this.projects];\n      this.projectDialog = false;\n      this.project = {};\n    }\n  }\n\n  dataURItoBlob(dataURI: string): Blob {\n    const byteString = atob(dataURI.split(',')[1]);\n    const ab = new ArrayBuffer(byteString.length);\n    const ia = new Uint8Array(ab);\n    for (let i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n    return new Blob([ab], { type: 'image/png' });\n  }\n\n  findIndexById(id: string): number {\n    let index = -1;\n    for (let i = 0; i < this.projects.length; i++) {\n      if (this.projects[i]._id === id) {\n        index = i;\n        break;\n      }\n    }\n    return index;\n  }\n\n  createId(): string {\n    let id = '';\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (let i = 0; i < 5; i++) {\n      id += chars.charAt(Math.floor(Math.random() * chars.length));\n    }\n    return id;\n  }\n\n  onGlobalFilter(table: Table, event: Event) {\n    table.filterGlobal((event.target as HTMLInputElement).value, 'contains');\n  }\n\n  handleImageChange(event: any) {\n    const file = event.target.files[0];\n\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e: any) => {\n        this.project.image = e.target.result;\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}