{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction AuthDialogComponent_div_6_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1, \"Email is required and must be valid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AuthDialogComponent_div_6_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AuthDialogComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\", 5);\n    i0.ɵɵtext(2, \"Login\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 6);\n    i0.ɵɵlistener(\"ngSubmit\", function AuthDialogComponent_div_6_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.login());\n    });\n    i0.ɵɵelementStart(4, \"div\", 7)(5, \"label\", 8);\n    i0.ɵɵtext(6, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 9);\n    i0.ɵɵtemplate(8, AuthDialogComponent_div_6_div_8_Template, 2, 0, \"div\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 7)(10, \"label\", 11);\n    i0.ɵɵtext(11, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"input\", 12);\n    i0.ɵɵtemplate(13, AuthDialogComponent_div_6_div_13_Template, 2, 0, \"div\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 13);\n    i0.ɵɵtext(15, \" Login \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.loginForm);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.loginForm.get(\"email\").invalid && (ctx_r0.loginForm.get(\"email\").dirty || ctx_r0.loginForm.get(\"email\").touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.loginForm.get(\"password\").invalid && (ctx_r0.loginForm.get(\"password\").dirty || ctx_r0.loginForm.get(\"password\").touched));\n  }\n}\nfunction AuthDialogComponent_div_7_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1, \"Email is required and must be valid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AuthDialogComponent_div_7_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AuthDialogComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\", 5);\n    i0.ɵɵtext(2, \"Register\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 6);\n    i0.ɵɵlistener(\"ngSubmit\", function AuthDialogComponent_div_7_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.register());\n    });\n    i0.ɵɵelementStart(4, \"div\", 7)(5, \"label\", 15);\n    i0.ɵɵtext(6, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 7)(9, \"label\", 17);\n    i0.ɵɵtext(10, \"Lastname\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"input\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 7)(13, \"label\", 19);\n    i0.ɵɵtext(14, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"input\", 20);\n    i0.ɵɵtemplate(16, AuthDialogComponent_div_7_div_16_Template, 2, 0, \"div\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\", 7)(18, \"label\", 21);\n    i0.ɵɵtext(19, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(20, \"input\", 22);\n    i0.ɵɵtemplate(21, AuthDialogComponent_div_7_div_21_Template, 2, 0, \"div\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"div\", 7)(23, \"label\", 23);\n    i0.ɵɵtext(24, \"Specialization\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(25, \"input\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"div\", 7)(27, \"label\", 25);\n    i0.ɵɵtext(28, \"User Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"div\", 26);\n    i0.ɵɵelement(30, \"input\", 27);\n    i0.ɵɵelementStart(31, \"label\", 28);\n    i0.ɵɵtext(32, \"Student\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(33, \"input\", 29);\n    i0.ɵɵelementStart(34, \"label\", 30);\n    i0.ɵɵtext(35, \"Teacher\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(36, \"button\", 13);\n    i0.ɵɵtext(37, \" Register \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.registerForm);\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.registerForm.get(\"email\").invalid && (ctx_r1.registerForm.get(\"email\").dirty || ctx_r1.registerForm.get(\"email\").touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.registerForm.get(\"password\").invalid && (ctx_r1.registerForm.get(\"password\").dirty || ctx_r1.registerForm.get(\"password\").touched));\n  }\n}\nexport class AuthDialogComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.isLogin = true;\n    this.isTeacher = false;\n  }\n  ngOnInit() {\n    // Initialize login form\n    this.authForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n      userType: ['student', Validators.required]\n    });\n    // Initialize register form\n    this.registerForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n      userType: ['student', Validators.required]\n      // Add more fields for registration as needed\n    });\n  }\n\n  loginOrRegister() {\n    if (this.isLogin) {\n      // Handle login form submission\n      // Example:\n      console.log('Login form submitted:', this.authForm.value);\n    } else {\n      // Handle registration form submission\n      // Example:\n      console.log('Registration form submitted:', this.registerForm.value);\n    }\n  }\n  register() {\n    // Handle registration form submission\n    // Example:\n    console.log('Registration form submitted:', this.registerForm.value);\n  }\n  toggleLogin() {\n    this.isLogin = !this.isLogin;\n  }\n  toggleUserType() {\n    this.isTeacher = !this.isTeacher;\n  }\n  static #_ = this.ɵfac = function AuthDialogComponent_Factory(t) {\n    return new (t || AuthDialogComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AuthDialogComponent,\n    selectors: [[\"app-auth-dialog\"]],\n    decls: 8,\n    vars: 6,\n    consts: [[1, \"auth-dialog\", \"bg-white\", \"rounded-lg\", \"p-8\", \"max-w-md\", \"w-full\"], [1, \"flex\", \"justify-center\", \"mb-4\"], [1, \"mr-2\", \"py-2\", \"px-4\", \"rounded\", \"hover:bg-gray-200\", \"focus:outline-none\", 3, \"click\"], [1, \"py-2\", \"px-4\", \"rounded\", \"hover:bg-gray-200\", \"focus:outline-none\", 3, \"click\"], [4, \"ngIf\"], [1, \"text-2xl\", \"font-bold\", \"mb-4\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-4\"], [\"for\", \"loginEmail\", 1, \"block\", \"text-gray-700\"], [\"type\", \"email\", \"id\", \"loginEmail\", \"formControlName\", \"email\", 1, \"mt-1\", \"block\", \"w-full\", \"rounded-md\", \"border-gray-300\", \"shadow-sm\", \"focus:border-indigo-300\", \"focus:ring\", \"focus:ring-indigo-200\", \"focus:ring-opacity-50\"], [\"class\", \"text-red-500 text-sm mt-1\", 4, \"ngIf\"], [\"for\", \"loginPassword\", 1, \"block\", \"text-gray-700\"], [\"type\", \"password\", \"id\", \"loginPassword\", \"formControlName\", \"password\", 1, \"mt-1\", \"block\", \"w-full\", \"rounded-md\", \"border-gray-300\", \"shadow-sm\", \"focus:border-indigo-300\", \"focus:ring\", \"focus:ring-indigo-200\", \"focus:ring-opacity-50\"], [\"type\", \"submit\", 1, \"w-full\", \"bg-indigo-500\", \"text-white\", \"font-bold\", \"py-2\", \"px-4\", \"rounded\", \"hover:bg-indigo-700\", \"focus:outline-none\", \"focus:shadow-outline\"], [1, \"text-red-500\", \"text-sm\", \"mt-1\"], [\"for\", \"name\", 1, \"block\", \"text-gray-700\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"mt-1\", \"block\", \"w-full\", \"rounded-md\", \"border-gray-300\", \"shadow-sm\", \"focus:border-indigo-300\", \"focus:ring\", \"focus:ring-indigo-200\", \"focus:ring-opacity-50\"], [\"for\", \"lastname\", 1, \"block\", \"text-gray-700\"], [\"type\", \"text\", \"id\", \"lastname\", \"formControlName\", \"lastname\", 1, \"mt-1\", \"block\", \"w-full\", \"rounded-md\", \"border-gray-300\", \"shadow-sm\", \"focus:border-indigo-300\", \"focus:ring\", \"focus:ring-indigo-200\", \"focus:ring-opacity-50\"], [\"for\", \"registerEmail\", 1, \"block\", \"text-gray-700\"], [\"type\", \"email\", \"id\", \"registerEmail\", \"formControlName\", \"email\", 1, \"mt-1\", \"block\", \"w-full\", \"rounded-md\", \"border-gray-300\", \"shadow-sm\", \"focus:border-indigo-300\", \"focus:ring\", \"focus:ring-indigo-200\", \"focus:ring-opacity-50\"], [\"for\", \"registerPassword\", 1, \"block\", \"text-gray-700\"], [\"type\", \"password\", \"id\", \"registerPassword\", \"formControlName\", \"password\", 1, \"mt-1\", \"block\", \"w-full\", \"rounded-md\", \"border-gray-300\", \"shadow-sm\", \"focus:border-indigo-300\", \"focus:ring\", \"focus:ring-indigo-200\", \"focus:ring-opacity-50\"], [\"for\", \"specialization\", 1, \"block\", \"text-gray-700\"], [\"type\", \"text\", \"id\", \"specialization\", \"formControlName\", \"specialization\", 1, \"mt-1\", \"block\", \"w-full\", \"rounded-md\", \"border-gray-300\", \"shadow-sm\", \"focus:border-indigo-300\", \"focus:ring\", \"focus:ring-indigo-200\", \"focus:ring-opacity-50\"], [1, \"block\", \"text-gray-700\"], [1, \"flex\", \"items-center\", \"mt-2\"], [\"type\", \"radio\", \"id\", \"student\", \"name\", \"userType\", \"value\", \"student\", \"formControlName\", \"userType\", \"checked\", \"\", 1, \"mr-2\"], [\"for\", \"student\", 1, \"mr-4\"], [\"type\", \"radio\", \"id\", \"teacher\", \"name\", \"userType\", \"value\", \"teacher\", \"formControlName\", \"userType\", 1, \"mr-2\"], [\"for\", \"teacher\"]],\n    template: function AuthDialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function AuthDialogComponent_Template_button_click_2_listener() {\n          return ctx.toggleLogin();\n        });\n        i0.ɵɵtext(3, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function AuthDialogComponent_Template_button_click_4_listener() {\n          return ctx.toggleLogin();\n        });\n        i0.ɵɵtext(5, \"Register\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(6, AuthDialogComponent_div_6_Template, 16, 3, \"div\", 4);\n        i0.ɵɵtemplate(7, AuthDialogComponent_div_7_Template, 38, 3, \"div\", 4);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"bg-gray-200\", ctx.isLogin);\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"bg-gray-200\", !ctx.isLogin);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLogin);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLogin);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.RadioControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.NgIf],\n    styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhdXRoLWRpYWxvZy5jb21wb25lbnQuc2NzcyJ9 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGVtby9jb21wb25lbnRzL3ZpZXcvYXV0aC1kaWFsb2cvYXV0aC1kaWFsb2cuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLHdLQUF3SyIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AuthDialogComponent_div_6_Template_form_ngSubmit_3_listener","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","login","ɵɵelement","ɵɵtemplate","AuthDialogComponent_div_6_div_8_Template","AuthDialogComponent_div_6_div_13_Template","ɵɵadvance","ɵɵproperty","ctx_r0","loginForm","get","invalid","dirty","touched","AuthDialogComponent_div_7_Template_form_ngSubmit_3_listener","_r9","ctx_r8","register","AuthDialogComponent_div_7_div_16_Template","AuthDialogComponent_div_7_div_21_Template","ctx_r1","registerForm","AuthDialogComponent","constructor","fb","isLogin","isTeacher","ngOnInit","authForm","group","email","required","password","userType","loginOrRegister","console","log","value","toggleLogin","toggleUserType","_","ɵɵdirectiveInject","i1","FormBuilder","_2","selectors","decls","vars","consts","template","AuthDialogComponent_Template","rf","ctx","AuthDialogComponent_Template_button_click_2_listener","AuthDialogComponent_Template_button_click_4_listener","AuthDialogComponent_div_6_Template","AuthDialogComponent_div_7_Template","ɵɵclassProp"],"sources":["D:\\systemConfig\\me\\medin2024-tailwind\\src\\app\\demo\\components\\view\\auth-dialog\\auth-dialog.component.ts","D:\\systemConfig\\me\\medin2024-tailwind\\src\\app\\demo\\components\\view\\auth-dialog\\auth-dialog.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-auth-dialog',\n  templateUrl: './auth-dialog.component.html',\n  styleUrls: ['./auth-dialog.component.scss']\n})\nexport class AuthDialogComponent implements OnInit {\n  authForm: FormGroup;\n  registerForm: FormGroup;\n  isLogin: boolean = true;\n  isTeacher: boolean = false;\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    // Initialize login form\n    this.authForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n      userType: ['student', Validators.required]\n    });\n\n    // Initialize register form\n    this.registerForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n      userType: ['student', Validators.required],\n      // Add more fields for registration as needed\n    });\n  }\n\n  loginOrRegister() {\n    if (this.isLogin) {\n      // Handle login form submission\n      // Example:\n      console.log('Login form submitted:', this.authForm.value);\n    } else {\n      // Handle registration form submission\n      // Example:\n      console.log('Registration form submitted:', this.registerForm.value);\n    }\n  }\n\n  register() {\n    // Handle registration form submission\n    // Example:\n    console.log('Registration form submitted:', this.registerForm.value);\n  }\n\n  toggleLogin() {\n    this.isLogin = !this.isLogin;\n  }\n\n  toggleUserType() {\n    this.isTeacher = !this.isTeacher;\n  }\n}\n","<!-- auth-dialog.component.html -->\n\n<div class=\"auth-dialog bg-white rounded-lg p-8 max-w-md w-full\">\n  <!-- Panel to choose between Login and Register -->\n  <div class=\"flex justify-center mb-4\">\n    <button class=\"mr-2 py-2 px-4 rounded hover:bg-gray-200 focus:outline-none\"\n            [class.bg-gray-200]=\"isLogin\" (click)=\"toggleLogin()\">Login</button>\n    <button class=\"py-2 px-4 rounded hover:bg-gray-200 focus:outline-none\"\n            [class.bg-gray-200]=\"!isLogin\" (click)=\"toggleLogin()\">Register</button>\n  </div>\n\n  <!-- Form for Login -->\n  <div *ngIf=\"isLogin\">\n    <h2 class=\"text-2xl font-bold mb-4\">Login</h2>\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n      <!-- Email Input -->\n      <div class=\"mb-4\">\n        <label for=\"loginEmail\" class=\"block text-gray-700\">Email</label>\n        <input type=\"email\" id=\"loginEmail\" formControlName=\"email\"\n               class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\">\n        <div *ngIf=\"loginForm.get('email').invalid && (loginForm.get('email').dirty || loginForm.get('email').touched)\"\n             class=\"text-red-500 text-sm mt-1\">Email is required and must be valid</div>\n      </div>\n      \n      <!-- Password Input -->\n      <div class=\"mb-4\">\n        <label for=\"loginPassword\" class=\"block text-gray-700\">Password</label>\n        <input type=\"password\" id=\"loginPassword\" formControlName=\"password\"\n               class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\">\n        <div *ngIf=\"loginForm.get('password').invalid && (loginForm.get('password').dirty || loginForm.get('password').touched)\"\n             class=\"text-red-500 text-sm mt-1\">Password is required</div>\n      </div>\n\n      <!-- Submit Button -->\n      <button type=\"submit\"\n              class=\"w-full bg-indigo-500 text-white font-bold py-2 px-4 rounded hover:bg-indigo-700 focus:outline-none focus:shadow-outline\">\n        Login\n      </button>\n    </form>\n  </div>\n\n  <!-- Form for Register -->\n  <div *ngIf=\"!isLogin\">\n    <h2 class=\"text-2xl font-bold mb-4\">Register</h2>\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"register()\">\n      <!-- Name Input -->\n      <div class=\"mb-4\">\n        <label for=\"name\" class=\"block text-gray-700\">Name</label>\n        <input type=\"text\" id=\"name\" formControlName=\"name\"\n               class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\">\n      </div>\n\n      <!-- Lastname Input -->\n      <div class=\"mb-4\">\n        <label for=\"lastname\" class=\"block text-gray-700\">Lastname</label>\n        <input type=\"text\" id=\"lastname\" formControlName=\"lastname\"\n               class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\">\n      </div>\n      \n      <!-- Email Input -->\n      <div class=\"mb-4\">\n        <label for=\"registerEmail\" class=\"block text-gray-700\">Email</label>\n        <input type=\"email\" id=\"registerEmail\" formControlName=\"email\"\n               class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\">\n        <div *ngIf=\"registerForm.get('email').invalid && (registerForm.get('email').dirty || registerForm.get('email').touched)\"\n             class=\"text-red-500 text-sm mt-1\">Email is required and must be valid</div>\n      </div>\n      \n      <!-- Password Input -->\n      <div class=\"mb-4\">\n        <label for=\"registerPassword\" class=\"block text-gray-700\">Password</label>\n        <input type=\"password\" id=\"registerPassword\" formControlName=\"password\"\n               class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\">\n        <div *ngIf=\"registerForm.get('password').invalid && (registerForm.get('password').dirty || registerForm.get('password').touched)\"\n             class=\"text-red-500 text-sm mt-1\">Password is required</div>\n      </div>\n\n      <!-- Specialization Input -->\n      <div class=\"mb-4\">\n        <label for=\"specialization\" class=\"block text-gray-700\">Specialization</label>\n        <input type=\"text\" id=\"specialization\" formControlName=\"specialization\"\n               class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\">\n      </div>\n\n      <!-- User Type Select -->\n      <div class=\"mb-4\">\n        <label class=\"block text-gray-700\">User Type</label>\n        <div class=\"flex items-center mt-2\">\n          <input type=\"radio\" id=\"student\" name=\"userType\" value=\"student\" formControlName=\"userType\" checked\n                 class=\"mr-2\">\n          <label for=\"student\" class=\"mr-4\">Student</label>\n          <input type=\"radio\" id=\"teacher\" name=\"userType\" value=\"teacher\" formControlName=\"userType\"\n                 class=\"mr-2\">\n          <label for=\"teacher\">Teacher</label>\n        </div>\n      </div>\n\n      <!-- Submit Button -->\n      <button type=\"submit\"\n              class=\"w-full bg-indigo-500 text-white font-bold py-2 px-4 rounded hover:bg-indigo-700 focus:outline-none focus:shadow-outline\">\n        Register\n      </button>\n    </form>\n  </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}