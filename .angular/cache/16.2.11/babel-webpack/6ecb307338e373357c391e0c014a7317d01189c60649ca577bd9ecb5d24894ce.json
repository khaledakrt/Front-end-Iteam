{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let AddFormationComponent = class AddFormationComponent {\n  constructor(formationService, messageService) {\n    this.formationService = formationService;\n    this.messageService = messageService;\n    this.formations = [];\n    this.formation = null;\n    this.formationDialog = false;\n    this.deleteFormationDialog = false;\n    this.selectedFormations = [];\n    this.submitted = false;\n    this.cols = [{\n      field: 'name',\n      header: 'Name'\n    }, {\n      field: 'description',\n      header: 'Description'\n    }, {\n      field: 'image',\n      header: 'Image'\n    }];\n  }\n  ngOnInit() {\n    this.loadFormations();\n  }\n  loadFormations() {\n    this.formationService.getFormations().subscribe(data => {\n      this.formations = data;\n    });\n  }\n  openNew() {\n    this.formation = {};\n    this.submitted = false;\n    this.formationDialog = true;\n  }\n  deleteSelectedFormations() {\n    if (this.selectedFormations.length === 1) {\n      this.deleteFormation(this.selectedFormations[0]);\n    } else {\n      this.deleteFormationsDialog = true;\n    }\n  }\n  confirmDeleteSelected() {\n    this.deleteFormationsDialog = false;\n    const selectedIds = this.selectedFormations.map(formation => formation._id);\n    this.formationService.deleteFormations(selectedIds).subscribe(() => {\n      this.messageService.add({\n        severity: 'success',\n        summary: 'Successful',\n        detail: 'Formations Deleted',\n        life: 3000\n      });\n      this.loadFormations();\n      this.selectedFormations = [];\n    }, error => {\n      console.error(error);\n      // Handle error, display an error message, etc.\n    });\n  }\n\n  editFormation(formation) {\n    this.formation = {\n      ...formation\n    };\n    this.formationDialog = true;\n  }\n  deleteFormation(formation) {\n    this.deleteFormationDialog = true;\n    this.formation = {\n      ...formation\n    };\n  }\n  confirmDelete() {\n    this.deleteFormationDialog = false;\n    this.formationService.deleteFormation(this.formation._id).subscribe(() => {\n      this.messageService.add({\n        severity: 'success',\n        summary: 'Successful',\n        detail: 'Formation Deleted',\n        life: 3000\n      });\n      this.loadFormations();\n      this.formation = {};\n    });\n  }\n  hideDialog() {\n    this.formationDialog = false;\n    this.submitted = false;\n  }\n  saveFormation() {\n    this.submitted = true;\n    if (this.formation.name?.trim() && this.formation.description?.trim()) {\n      this.formationService.saveFormation(this.formation).subscribe(() => {\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Successful',\n          detail: 'Formation Saved',\n          life: 3000\n        });\n        this.loadFormations();\n        this.formationDialog = false;\n        this.formation = {};\n      });\n    }\n  }\n  onGlobalFilter(event) {\n    // Implement global filtering logic here\n  }\n  handleImageChange(event) {\n    // Implement image handling logic here\n  }\n};\nAddFormationComponent = __decorate([Component({\n  selector: 'app-add-formation',\n  templateUrl: './add-formation.component.html',\n  styleUrls: ['./add-formation.component.scss']\n})], AddFormationComponent);","map":{"version":3,"names":["Component","AddFormationComponent","constructor","formationService","messageService","formations","formation","formationDialog","deleteFormationDialog","selectedFormations","submitted","cols","field","header","ngOnInit","loadFormations","getFormations","subscribe","data","openNew","deleteSelectedFormations","length","deleteFormation","deleteFormationsDialog","confirmDeleteSelected","selectedIds","map","_id","deleteFormations","add","severity","summary","detail","life","error","console","editFormation","confirmDelete","hideDialog","saveFormation","name","trim","description","onGlobalFilter","event","handleImageChange","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\systemConfig\\me\\medin2024-tailwind\\src\\app\\demo\\components\\teacher\\formation\\add-formation\\add-formation.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormationService } from 'src/app/demo/service/formation.service';\n\n@Component({\n  selector: 'app-add-formation',\n  templateUrl: './add-formation.component.html',\n  styleUrls: ['./add-formation.component.scss']\n})\nexport class AddFormationComponent {\n  formations: Formation[] = [];\n  formation: Formation | null = null;\n  formationDialog: boolean = false;\n  deleteFormationDialog: boolean = false;\n  selectedFormations: Formation[] = [];\n  submitted: boolean = false;\n\n  cols: any[] = [\n    { field: 'name', header: 'Name' },\n    { field: 'description', header: 'Description' },\n    { field: 'image', header: 'Image' },\n  ];\n\n  constructor(private formationService: FormationService, private messageService: MessageService) {}\n\n  ngOnInit() {\n    this.loadFormations();\n  }\n\n  loadFormations() {\n    this.formationService.getFormations().subscribe((data) => {\n      this.formations = data;\n    });\n  }\n\n  openNew() {\n    this.formation = {};\n    this.submitted = false;\n    this.formationDialog = true;\n  }\n\n  deleteSelectedFormations() {\n    if (this.selectedFormations.length === 1) {\n      this.deleteFormation(this.selectedFormations[0]);\n    } else {\n      this.deleteFormationsDialog = true;\n    }\n  }\n\n  confirmDeleteSelected() {\n    this.deleteFormationsDialog = false;\n    const selectedIds = this.selectedFormations.map(formation => formation._id);\n    this.formationService.deleteFormations(selectedIds).subscribe(\n      () => {\n        this.messageService.add({ severity: 'success', summary: 'Successful', detail: 'Formations Deleted', life: 3000 });\n        this.loadFormations();\n        this.selectedFormations = [];\n      },\n      (error) => {\n        console.error(error);\n        // Handle error, display an error message, etc.\n      }\n    );\n  }\n  \n  editFormation(formation: Formation) {\n    this.formation = { ...formation };\n    this.formationDialog = true;\n  }\n\n  deleteFormation(formation: Formation) {\n    this.deleteFormationDialog = true;\n    this.formation = { ...formation };\n  }\n\n  confirmDelete() {\n    this.deleteFormationDialog = false;\n    this.formationService.deleteFormation(this.formation._id).subscribe(() => {\n      this.messageService.add({ severity: 'success', summary: 'Successful', detail: 'Formation Deleted', life: 3000 });\n      this.loadFormations();\n      this.formation = {};\n    });\n  }\n\n  hideDialog() {\n    this.formationDialog = false;\n    this.submitted = false;\n  }\n\n  saveFormation() {\n    this.submitted = true;\n    if (this.formation.name?.trim() && this.formation.description?.trim()) {\n      this.formationService.saveFormation(this.formation).subscribe(() => {\n        this.messageService.add({ severity: 'success', summary: 'Successful', detail: 'Formation Saved', life: 3000 });\n        this.loadFormations();\n        this.formationDialog = false;\n        this.formation = {};\n      });\n    }\n  }\n\n  onGlobalFilter(event: any) {\n    // Implement global filtering logic here\n  }\n\n  handleImageChange(event: any) {\n    // Implement image handling logic here\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}