{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/demo/service/auth-admin.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"primeng/button\";\nimport * as i4 from \"primeng/checkbox\";\nimport * as i5 from \"primeng/inputtext\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"primeng/password\";\nconst _c0 = function () {\n  return [\"/\"];\n};\nexport class LoginComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.email = '';\n    this.password = '';\n    this.rememberMe = false;\n  }\n  login() {\n    this.authService.login({\n      email: this.email,\n      password: this.password\n    }).subscribe(response => {\n      // Assuming the response contains a token upon successful login\n      const token = response.token;\n      // Store token in local storage or session storage for future requests\n      localStorage.setItem('token', token);\n      // Redirect to home page or any other desired route\n      this.router.navigate(['/']);\n    }, error => {\n      // Handle login error\n      console.error(error);\n      // Optionally display error message to user\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthAdminService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 26,\n    vars: 6,\n    consts: [[1, \"surface-ground\", \"flex\", \"align-items-center\", \"justify-content-center\", \"min-h-screen\", \"min-w-screen\", \"overflow-hidden\"], [1, \"flex\", \"flex-column\", \"align-items-center\", \"justify-content-center\"], [\"alt\", \"Sakai logo\", 1, \"mb-5\", \"w-6rem\", \"flex-shrink-0\", 3, \"src\"], [2, \"border-radius\", \"56px\", \"padding\", \"0.3rem\", \"background\", \"linear-gradient(180deg, var(--primary-color) 10%, rgba(33, 150, 243, 0) 30%)\"], [1, \"w-full\", \"surface-card\", \"py-8\", \"px-5\", \"sm:px-8\", 2, \"border-radius\", \"53px\"], [1, \"text-center\", \"mb-5\"], [\"src\", \"assets/demo/images/login/avatar.png\", \"alt\", \"Image\", \"height\", \"50\", 1, \"mb-3\"], [1, \"text-900\", \"text-3xl\", \"font-medium\", \"mb-3\"], [1, \"text-600\", \"font-medium\"], [\"for\", \"email1\", 1, \"block\", \"text-900\", \"text-xl\", \"font-medium\", \"mb-2\"], [\"id\", \"email1\", \"type\", \"text\", \"placeholder\", \"Email address\", \"pInputText\", \"\", 1, \"w-full\", \"md:w-30rem\", \"mb-5\", 2, \"padding\", \"1rem\"], [\"for\", \"password1\", 1, \"block\", \"text-900\", \"font-medium\", \"text-xl\", \"mb-2\"], [\"id\", \"password1\", \"placeholder\", \"Password\", \"styleClass\", \"mb-5\", \"inputStyleClass\", \"w-full p-3 md:w-30rem\", 3, \"ngModel\", \"toggleMask\", \"ngModelChange\"], [1, \"flex\", \"align-items-center\", \"justify-content-between\", \"mb-5\", \"gap-5\"], [1, \"flex\", \"align-items-center\"], [\"id\", \"rememberme1\", \"styleClass\", \"mr-2\", 3, \"binary\"], [\"for\", \"rememberme1\"], [1, \"font-medium\", \"no-underline\", \"ml-2\", \"text-right\", \"cursor-pointer\", 2, \"color\", \"var(--primary-color)\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Sign In\", 1, \"w-full\", \"p-3\", \"text-xl\", 3, \"routerLink\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"img\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5);\n        i0.ɵɵelement(6, \"img\", 6);\n        i0.ɵɵelementStart(7, \"div\", 7);\n        i0.ɵɵtext(8, \"Welcome, Isabel!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"span\", 8);\n        i0.ɵɵtext(10, \"Sign in to continue\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\")(12, \"label\", 9);\n        i0.ɵɵtext(13, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 10);\n        i0.ɵɵelementStart(15, \"label\", 11);\n        i0.ɵɵtext(16, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"p-password\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_p_password_ngModelChange_17_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 13)(19, \"div\", 14);\n        i0.ɵɵelement(20, \"p-checkbox\", 15);\n        i0.ɵɵelementStart(21, \"label\", 16);\n        i0.ɵɵtext(22, \"Remember me\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"a\", 17);\n        i0.ɵɵtext(24, \"Forgot password?\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(25, \"button\", 18);\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate1(\"src\", \"assets/layout/images/\", ctx.layoutService.config.colorScheme === \"light\" ? \"logo-dark\" : \"logo-white\", \".svg\", i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngModel\", ctx.password)(\"toggleMask\", true);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"binary\", true);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(5, _c0));\n      }\n    },\n    dependencies: [i2.RouterLink, i3.ButtonDirective, i4.Checkbox, i5.InputText, i6.NgControlStatus, i6.NgModel, i7.Password],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["LoginComponent","constructor","authService","router","email","password","rememberMe","login","subscribe","response","token","localStorage","setItem","navigate","error","console","_","i0","ɵɵdirectiveInject","i1","AuthAdminService","i2","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_p_password_ngModelChange_17_listener","$event","ɵɵadvance","ɵɵpropertyInterpolate1","layoutService","config","colorScheme","ɵɵsanitizeUrl","ɵɵproperty","ɵɵpureFunction0","_c0"],"sources":["D:\\systemConfig\\me\\medin2024-tailwind\\src\\app\\demo\\components\\auth\\login\\login.component.ts","D:\\systemConfig\\me\\medin2024-tailwind\\src\\app\\demo\\components\\auth\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthAdminService } from 'src/app/demo/service/auth-admin.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent {\n  email: string = '';\n  password: string = '';\n  rememberMe: boolean = false;\n\n  constructor(private authService: AuthAdminService, private router: Router) {}\n\n  login() {\n    this.authService.login({ email: this.email, password: this.password }).subscribe((response: any) => {\n      // Assuming the response contains a token upon successful login\n      const token = response.token;\n      // Store token in local storage or session storage for future requests\n      localStorage.setItem('token', token);\n      // Redirect to home page or any other desired route\n      this.router.navigate(['/']);\n    }, (error: any) => {\n      // Handle login error\n      console.error(error);\n      // Optionally display error message to user\n    });\n  }\n}\n","<div class=\"surface-ground flex align-items-center justify-content-center min-h-screen min-w-screen overflow-hidden\">\n    <div class=\"flex flex-column align-items-center justify-content-center\">\n        <img src=\"assets/layout/images/{{layoutService.config.colorScheme === 'light' ? 'logo-dark' : 'logo-white'}}.svg\" alt=\"Sakai logo\" class=\"mb-5 w-6rem flex-shrink-0\">                \n        <div style=\"border-radius:56px; padding:0.3rem; background: linear-gradient(180deg, var(--primary-color) 10%, rgba(33, 150, 243, 0) 30%);\">\n            <div class=\"w-full surface-card py-8 px-5 sm:px-8\" style=\"border-radius:53px\">\n                <div class=\"text-center mb-5\">\n                    <img src=\"assets/demo/images/login/avatar.png\" alt=\"Image\" height=\"50\" class=\"mb-3\">\n                    <div class=\"text-900 text-3xl font-medium mb-3\">Welcome, Isabel!</div>\n                    <span class=\"text-600 font-medium\">Sign in to continue</span>\n                </div>\n\n                <div>\n                    <label for=\"email1\" class=\"block text-900 text-xl font-medium mb-2\">Email</label>\n                    <input id=\"email1\" type=\"text\" placeholder=\"Email address\" pInputText class=\"w-full md:w-30rem mb-5\" style=\"padding:1rem\">\n\n                    <label for=\"password1\" class=\"block text-900 font-medium text-xl mb-2\">Password</label>\n                    <p-password id=\"password1\" [(ngModel)]=\"password\" placeholder=\"Password\" [toggleMask]=\"true\" styleClass=\"mb-5\" inputStyleClass=\"w-full p-3 md:w-30rem\"></p-password>\n\n                    <div class=\"flex align-items-center justify-content-between mb-5 gap-5\">\n                        <div class=\"flex align-items-center\">\n                            <p-checkbox id=\"rememberme1\" [binary]=\"true\" styleClass=\"mr-2\"></p-checkbox>\n                            <label for=\"rememberme1\">Remember me</label>\n                        </div>\n                        <a class=\"font-medium no-underline ml-2 text-right cursor-pointer\" style=\"color: var(--primary-color)\">Forgot password?</a>\n                    </div>\n                    <button pButton pRipple label=\"Sign In\" class=\"w-full p-3 text-xl\" [routerLink]=\"['/']\"></button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}