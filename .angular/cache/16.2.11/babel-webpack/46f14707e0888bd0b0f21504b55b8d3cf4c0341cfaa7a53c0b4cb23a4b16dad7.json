{"ast":null,"code":"import { JwtHelperService } from '@auth0/angular-jwt';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthAdminService {\n  constructor(http) {\n    this.http = http;\n    this.helper = new JwtHelperService();\n    this.url = 'http://127.0.0.1:3000/';\n    this.users = [];\n  }\n  authenticateAdmin(credentials) {\n    return this.http.post(this.url + 'admin/login', credentials);\n  }\n  saveDataAdmin(token) {\n    let decodeToken = this.helper.decodeToken(token);\n    console.log(decodeToken);\n    localStorage.setItem('token_admin', token);\n    localStorage.setItem('role', decodeToken.role);\n    localStorage.setItem('nom', decodeToken.nom);\n  }\n  adminLoggedIn() {\n    let token = localStorage.getItem('token_admin');\n    if (!token) {\n      return false;\n    }\n    if (this.helper.isTokenExpired(token)) {\n      return false;\n    }\n    return true;\n  }\n  static #_ = this.ɵfac = function AuthAdminService_Factory(t) {\n    return new (t || AuthAdminService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthAdminService,\n    factory: AuthAdminService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["JwtHelperService","AuthAdminService","constructor","http","helper","url","users","authenticateAdmin","credentials","post","saveDataAdmin","token","decodeToken","console","log","localStorage","setItem","role","nom","adminLoggedIn","getItem","isTokenExpired","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\systemConfig\\me\\medin2024-tailwind\\src\\app\\demo\\service\\auth-admin.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthAdminService {\n\nhelper = new  JwtHelperService(); \n\n  constructor(private http: HttpClient) { }\n  private url = 'http://127.0.0.1:3000/';\n   \n  authenticateAdmin(credentials: any): Observable<any> {\n    return this.http.post<any>(this.url + 'admin/login', credentials);\n  }\n  saveDataAdmin(token:any){\n    let decodeToken = this.helper.decodeToken(token)\nconsole.log(decodeToken)\n    localStorage.setItem('token_admin',token);\n    localStorage.setItem('role',decodeToken.role);\n    localStorage.setItem('nom',decodeToken.nom)\n  }\n\n  adminLoggedIn(){\n    let token:any=localStorage.getItem('token_admin');\n    if (!token){\n      return false\n    }\n    if(this.helper.isTokenExpired(token)){\n   return false\n    }\n    return true \n  }\n  users:any[] = [];\n \n\n \n\n}"],"mappings":"AAGA,SAASA,gBAAgB,QAAQ,oBAAoB;;;AAIrD,OAAM,MAAOC,gBAAgB;EAI3BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAF1B,KAAAC,MAAM,GAAG,IAAKJ,gBAAgB,EAAE;IAGtB,KAAAK,GAAG,GAAG,wBAAwB;IAuBtC,KAAAC,KAAK,GAAS,EAAE;EAxBwB;EAGxCC,iBAAiBA,CAACC,WAAgB;IAChC,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAM,IAAI,CAACJ,GAAG,GAAG,aAAa,EAAEG,WAAW,CAAC;EACnE;EACAE,aAAaA,CAACC,KAAS;IACrB,IAAIC,WAAW,GAAG,IAAI,CAACR,MAAM,CAACQ,WAAW,CAACD,KAAK,CAAC;IACpDE,OAAO,CAACC,GAAG,CAACF,WAAW,CAAC;IACpBG,YAAY,CAACC,OAAO,CAAC,aAAa,EAACL,KAAK,CAAC;IACzCI,YAAY,CAACC,OAAO,CAAC,MAAM,EAACJ,WAAW,CAACK,IAAI,CAAC;IAC7CF,YAAY,CAACC,OAAO,CAAC,KAAK,EAACJ,WAAW,CAACM,GAAG,CAAC;EAC7C;EAEAC,aAAaA,CAAA;IACX,IAAIR,KAAK,GAAKI,YAAY,CAACK,OAAO,CAAC,aAAa,CAAC;IACjD,IAAI,CAACT,KAAK,EAAC;MACT,OAAO,KAAK;;IAEd,IAAG,IAAI,CAACP,MAAM,CAACiB,cAAc,CAACV,KAAK,CAAC,EAAC;MACtC,OAAO,KAAK;;IAEX,OAAO,IAAI;EACb;EAAC,QAAAW,CAAA,G;qBA3BUrB,gBAAgB,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAhB1B,gBAAgB;IAAA2B,OAAA,EAAhB3B,gBAAgB,CAAA4B,IAAA;IAAAC,UAAA,EAFf;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}