{"ast":null,"code":"import { JwtHelperService } from '@auth0/angular-jwt';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthStudentService {\n  constructor(http) {\n    this.http = http;\n    this.helper = new JwtHelperService();\n    this.url = 'http://127.0.0.1:3000/';\n  }\n  authenticateStudent(credentials) {\n    return this.http.post(this.url + 'student/login', credentials);\n  }\n  saveDataStudent(token) {\n    let decodeToken = this.helper.decodeToken(token);\n    localStorage.setItem('token_student', token);\n    localStorage.setItem('role', decodeToken.role);\n    localStorage.setItem('name', decodeToken.name);\n  }\n  studentLoggedIn() {\n    let token = localStorage.getItem('token_student');\n    if (!token) {\n      return false;\n    }\n    if (this.helper.isTokenExpired(token)) {\n      return false;\n    }\n    return true;\n  }\n  static #_ = this.ɵfac = function AuthStudentService_Factory(t) {\n    return new (t || AuthStudentService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthStudentService,\n    factory: AuthStudentService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["JwtHelperService","AuthStudentService","constructor","http","helper","url","authenticateStudent","credentials","post","saveDataStudent","token","decodeToken","localStorage","setItem","role","name","studentLoggedIn","getItem","isTokenExpired","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\systemConfig\\me\\medin2024-tailwind\\src\\app\\demo\\service\\auth-student.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthStudentService {\n\n  helper = new JwtHelperService();\n\n  constructor(private http: HttpClient) { }\n  private url = 'http://127.0.0.1:3000/';\n\n  authenticateStudent(credentials: any): Observable<any> {\n    return this.http.post<any>(this.url + 'student/login', credentials);\n  }\n\n  saveDataStudent(token: any) {\n    let decodeToken = this.helper.decodeToken(token)\n    localStorage.setItem('token_student', token);\n    localStorage.setItem('role', decodeToken.role);\n    localStorage.setItem('name', decodeToken.name);\n  }\n\n  studentLoggedIn() {\n    let token: any = localStorage.getItem('token_student');\n    if (!token) {\n      return false\n    }\n    if (this.helper.isTokenExpired(token)) {\n      return false\n    }\n    return true\n  }\n}\n"],"mappings":"AAGA,SAASA,gBAAgB,QAAQ,oBAAoB;;;AAKrD,OAAM,MAAOC,kBAAkB;EAI7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,MAAM,GAAG,IAAIJ,gBAAgB,EAAE;IAGvB,KAAAK,GAAG,GAAG,wBAAwB;EADE;EAGxCC,mBAAmBA,CAACC,WAAgB;IAClC,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAM,IAAI,CAACH,GAAG,GAAG,eAAe,EAAEE,WAAW,CAAC;EACrE;EAEAE,eAAeA,CAACC,KAAU;IACxB,IAAIC,WAAW,GAAG,IAAI,CAACP,MAAM,CAACO,WAAW,CAACD,KAAK,CAAC;IAChDE,YAAY,CAACC,OAAO,CAAC,eAAe,EAAEH,KAAK,CAAC;IAC5CE,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEF,WAAW,CAACG,IAAI,CAAC;IAC9CF,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEF,WAAW,CAACI,IAAI,CAAC;EAChD;EAEAC,eAAeA,CAAA;IACb,IAAIN,KAAK,GAAQE,YAAY,CAACK,OAAO,CAAC,eAAe,CAAC;IACtD,IAAI,CAACP,KAAK,EAAE;MACV,OAAO,KAAK;;IAEd,IAAI,IAAI,CAACN,MAAM,CAACc,cAAc,CAACR,KAAK,CAAC,EAAE;MACrC,OAAO,KAAK;;IAEd,OAAO,IAAI;EACb;EAAC,QAAAS,CAAA,G;qBA3BUlB,kBAAkB,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAlBvB,kBAAkB;IAAAwB,OAAA,EAAlBxB,kBAAkB,CAAAyB,IAAA;IAAAC,UAAA,EAFjB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}