{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, HostListener } from '@angular/core';\nexport let SectionsViewComponent = class SectionsViewComponent {\n  constructor(layoutService, router, blogService // Inject the BlogService\n  ,\n  // Inject the BlogService\n  route // Inject ActivatedRoute\n  ) {\n    this.layoutService = layoutService;\n    this.router = router;\n    this.blogService = blogService;\n    this.route = route;\n    this.isNavbarGray = false;\n    this.isResponsiveMenuGray = false;\n    this.blogContent = ''; // Assuming the content is a string\n  }\n\n  ngOnInit() {\n    // Extract blog ID from the route parameters\n    const blogId = this.route.snapshot.paramMap.get('id');\n    this.fetchBlogContent(blogId);\n  }\n  onScroll() {\n    this.isNavbarGray = window.scrollY > 20; // Adjust the scroll position threshold\n  }\n\n  toggleNavbarColor() {\n    this.isNavbarGray = true;\n  }\n  fetchBlogContent(blogId) {\n    this.blogService.getBlogContent(blogId).subscribe(content => {\n      this.blogContent = content || '';\n    }, error => {\n      console.error('Error fetching blog content:', error);\n    });\n  }\n};\n__decorate([HostListener('window:scroll', ['$event'])], SectionsViewComponent.prototype, \"onScroll\", null);\nSectionsViewComponent = __decorate([Component({\n  selector: 'app-sections-view',\n  templateUrl: './sections-view.component.html',\n  styleUrls: ['./sections-view.component.scss']\n})], SectionsViewComponent);","map":{"version":3,"names":["Component","HostListener","SectionsViewComponent","constructor","layoutService","router","blogService","route","isNavbarGray","isResponsiveMenuGray","blogContent","ngOnInit","blogId","snapshot","paramMap","get","fetchBlogContent","onScroll","window","scrollY","toggleNavbarColor","getBlogContent","subscribe","content","error","console","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\systemConfig\\me\\medin2024-tailwind\\src\\app\\demo\\components\\view\\sections-view\\sections-view.component.ts"],"sourcesContent":["import { Component, HostListener, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BlogService } from 'src/app/demo/service/blog.service';\nimport { LayoutService } from 'src/app/layout/service/app.layout.service';\n\n@Component({\n  selector: 'app-sections-view',\n  templateUrl: './sections-view.component.html',\n  styleUrls: ['./sections-view.component.scss']\n})\nexport class SectionsViewComponent implements OnInit {\n  isNavbarGray = false;\n  isResponsiveMenuGray: boolean = false;\n  blogContent: string = ''; // Assuming the content is a string\n\n  constructor(\n    public layoutService: LayoutService,\n    public router: Router,\n    private blogService: BlogService // Inject the BlogService\n    private route: ActivatedRoute // Inject ActivatedRoute\n\n  ) {}\n\n  ngOnInit() {\n    // Extract blog ID from the route parameters\n    const blogId = this.route.snapshot.paramMap.get('id');\n    this.fetchBlogContent(blogId);\n  }\n\n  @HostListener('window:scroll', ['$event'])\n  onScroll() {\n    this.isNavbarGray = window.scrollY > 20; // Adjust the scroll position threshold\n  }\n\n  toggleNavbarColor() {\n    this.isNavbarGray = true;\n  }\n\n  fetchBlogContent(blogId: string) {\n    this.blogService.getBlogContent(blogId).subscribe(\n      (content: string) => {\n        this.blogContent = content || '';\n      },\n      (error) => {\n        console.error('Error fetching blog content:', error);\n      }\n    );\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,YAAY,QAAgB,eAAe;AAUxD,WAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAKhCC,YACSC,aAA4B,EAC5BC,MAAc,EACbC,WAAwB,CAAC;EAAA;EAAA;EACzBC,KAAqB,CAAC;EAAA,E;IAHvB,KAAAH,aAAa,GAAbA,aAAa;IACb,KAAAC,MAAM,GAANA,MAAM;IACL,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,KAAK,GAALA,KAAK;IARf,KAAAC,YAAY,GAAG,KAAK;IACpB,KAAAC,oBAAoB,GAAY,KAAK;IACrC,KAAAC,WAAW,GAAW,EAAE,CAAC,CAAC;EAQvB;;EAEHC,QAAQA,CAAA;IACN;IACA,MAAMC,MAAM,GAAG,IAAI,CAACL,KAAK,CAACM,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IACrD,IAAI,CAACC,gBAAgB,CAACJ,MAAM,CAAC;EAC/B;EAGAK,QAAQA,CAAA;IACN,IAAI,CAACT,YAAY,GAAGU,MAAM,CAACC,OAAO,GAAG,EAAE,CAAC,CAAC;EAC3C;;EAEAC,iBAAiBA,CAAA;IACf,IAAI,CAACZ,YAAY,GAAG,IAAI;EAC1B;EAEAQ,gBAAgBA,CAACJ,MAAc;IAC7B,IAAI,CAACN,WAAW,CAACe,cAAc,CAACT,MAAM,CAAC,CAACU,SAAS,CAC9CC,OAAe,IAAI;MAClB,IAAI,CAACb,WAAW,GAAGa,OAAO,IAAI,EAAE;IAClC,CAAC,EACAC,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,CACF;EACH;CAED;AAnBCE,UAAA,EADCzB,YAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC,C,oDAGzC;AAtBUC,qBAAqB,GAAAwB,UAAA,EALjC1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,C,EACW3B,qBAAqB,CAuCjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}