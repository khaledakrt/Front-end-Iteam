{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction AuthDialogComponent_div_8_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AuthDialogComponent_div_8_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Invalid email\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AuthDialogComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, AuthDialogComponent_div_8_div_1_Template, 2, 0, \"div\", 5);\n    i0.ɵɵtemplate(2, AuthDialogComponent_div_8_div_2_Template, 2, 0, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.authForm.get(\"email\").errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.authForm.get(\"email\").errors.email);\n  }\n}\nfunction AuthDialogComponent_div_13_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AuthDialogComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, AuthDialogComponent_div_13_div_1_Template, 2, 0, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.authForm.get(\"password\").errors.required);\n  }\n}\nexport class AuthDialogComponent {\n  constructor(fb) {\n    this.fb = fb;\n  }\n  ngOnInit() {\n    this.authForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n      userType: ['student'] // Default to student\n    });\n  }\n\n  loginOrRegister() {\n    if (this.authForm.valid) {\n      const email = this.authForm.get('email').value;\n      const password = this.authForm.get('password').value;\n      const userType = this.authForm.get('userType').value;\n      // You can handle login/register logic here\n      console.log(\"Email:\", email);\n      console.log(\"Password:\", password);\n      console.log(\"User Type:\", userType);\n    } else {\n      // Handle form validation errors\n      // You can display error messages or perform other actions here\n    }\n  }\n  static #_ = this.ɵfac = function AuthDialogComponent_Factory(t) {\n    return new (t || AuthDialogComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AuthDialogComponent,\n    selectors: [[\"app-auth-dialog\"]],\n    decls: 24,\n    vars: 3,\n    consts: [[1, \"auth-dialog\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\"], [4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\"], [\"for\", \"userType\"], [\"id\", \"userType\", \"formControlName\", \"userType\"], [\"value\", \"student\"], [\"value\", \"teacher\"], [\"type\", \"submit\"]],\n    template: function AuthDialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Login or Register\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function AuthDialogComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.loginOrRegister();\n        });\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n        i0.ɵɵtext(6, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵtemplate(8, AuthDialogComponent_div_8_Template, 3, 2, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 2)(10, \"label\", 6);\n        i0.ɵɵtext(11, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 7);\n        i0.ɵɵtemplate(13, AuthDialogComponent_div_13_Template, 2, 1, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 2)(15, \"label\", 8);\n        i0.ɵɵtext(16, \"User Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"select\", 9)(18, \"option\", 10);\n        i0.ɵɵtext(19, \"Student\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"option\", 11);\n        i0.ɵɵtext(21, \"Teacher\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(22, \"button\", 12);\n        i0.ɵɵtext(23, \"Submit\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.authForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.authForm.get(\"email\").invalid && (ctx.authForm.get(\"email\").dirty || ctx.authForm.get(\"email\").touched));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.authForm.get(\"password\").invalid && (ctx.authForm.get(\"password\").dirty || ctx.authForm.get(\"password\").touched));\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.NgIf],\n    styles: [\"\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\t\\\"use strict\\\";\\n\\n \\t\\n\\n \\t\\n\\n })()[_ngcontent-%COMP%]\\n;\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","AuthDialogComponent_div_8_div_1_Template","AuthDialogComponent_div_8_div_2_Template","ɵɵadvance","ɵɵproperty","ctx_r0","authForm","get","errors","required","email","AuthDialogComponent_div_13_div_1_Template","ctx_r1","AuthDialogComponent","constructor","fb","ngOnInit","group","password","userType","loginOrRegister","valid","value","console","log","_","ɵɵdirectiveInject","i1","FormBuilder","_2","selectors","decls","vars","consts","template","AuthDialogComponent_Template","rf","ctx","ɵɵlistener","AuthDialogComponent_Template_form_ngSubmit_3_listener","ɵɵelement","AuthDialogComponent_div_8_Template","AuthDialogComponent_div_13_Template","invalid","dirty","touched"],"sources":["D:\\systemConfig\\me\\medin2024-tailwind\\src\\app\\demo\\components\\view\\auth-dialog\\auth-dialog.component.ts","D:\\systemConfig\\me\\medin2024-tailwind\\src\\app\\demo\\components\\view\\auth-dialog\\auth-dialog.component.html"],"sourcesContent":["// auth-dialog.component.ts\n\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-auth-dialog',\n  templateUrl: './auth-dialog.component.html',\n  styleUrls: ['./auth-dialog.component.css']\n})\nexport class AuthDialogComponent implements OnInit {\n  authForm: FormGroup;\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.authForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n      userType: ['student'] // Default to student\n    });\n  }\n\n  loginOrRegister(): void {\n    if (this.authForm.valid) {\n      const email = this.authForm.get('email').value;\n      const password = this.authForm.get('password').value;\n      const userType = this.authForm.get('userType').value;\n\n      // You can handle login/register logic here\n      console.log(\"Email:\", email);\n      console.log(\"Password:\", password);\n      console.log(\"User Type:\", userType);\n    } else {\n      // Handle form validation errors\n      // You can display error messages or perform other actions here\n    }\n  }\n}\n","<!-- auth-dialog.component.html -->\n\n<div class=\"auth-dialog\">\n    <h2>Login or Register</h2>\n  \n    <form [formGroup]=\"authForm\" (ngSubmit)=\"loginOrRegister()\">\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input type=\"email\" id=\"email\" formControlName=\"email\">\n        <div *ngIf=\"authForm.get('email').invalid && (authForm.get('email').dirty || authForm.get('email').touched)\">\n          <div *ngIf=\"authForm.get('email').errors.required\">Email is required</div>\n          <div *ngIf=\"authForm.get('email').errors.email\">Invalid email</div>\n        </div>\n      </div>\n  \n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" id=\"password\" formControlName=\"password\">\n        <div *ngIf=\"authForm.get('password').invalid && (authForm.get('password').dirty || authForm.get('password').touched)\">\n          <div *ngIf=\"authForm.get('password').errors.required\">Password is required</div>\n        </div>\n      </div>\n  \n      <div class=\"form-group\">\n        <label for=\"userType\">User Type</label>\n        <select id=\"userType\" formControlName=\"userType\">\n          <option value=\"student\">Student</option>\n          <option value=\"teacher\">Teacher</option>\n        </select>\n      </div>\n  \n      <!-- Add more form fields as needed, e.g., name, role, etc. -->\n      <button type=\"submit\">Submit</button>\n    </form>\n  </div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}