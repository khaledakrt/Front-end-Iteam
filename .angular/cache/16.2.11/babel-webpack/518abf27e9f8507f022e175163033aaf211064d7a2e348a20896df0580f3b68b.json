{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/demo/service/auth-admin.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"primeng/button\";\nexport class LoginComponent {\n  constructor(formBuilder, authService, router) {\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.router = router;\n    this.rememberMe = false;\n  }\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]]\n    });\n  }\n  get form() {\n    return this.loginForm.controls;\n  }\n  login() {\n    if (this.loginForm.invalid) {\n      return;\n    }\n    this.authService.login(this.loginForm.value).subscribe(response => {\n      // Assuming the response contains a token upon successful login\n      const token = response.token;\n      this.authService.saveDataAdmin(token);\n      // Store token in local storage or session storage for future requests\n      localStorage.setItem('token', token);\n      // Redirect to home page or any other desired route\n      this.router.navigate(['/']);\n    }, error => {\n      // Handle login error\n      console.error(error);\n      // Optionally display error message to user\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthAdminService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 26,\n    vars: 2,\n    consts: [[1, \"surface-ground\", \"flex\", \"align-items-center\", \"justify-content-center\", \"min-h-screen\", \"min-w-screen\", \"overflow-hidden\"], [1, \"flex\", \"flex-column\", \"align-items-center\", \"justify-content-center\"], [2, \"border-radius\", \"56px\", \"padding\", \"0.3rem\", \"background\", \"linear-gradient(180deg, var(--primary-color) 10%, rgba(33, 150, 243, 0) 30%)\"], [1, \"w-full\", \"surface-card\", \"py-8\", \"px-5\", \"sm:px-8\", 2, \"border-radius\", \"53px\"], [1, \"text-center\", \"mb-5\"], [\"src\", \"assets/demo/images/login/avatar.png\", \"alt\", \"Image\", \"height\", \"50\", 1, \"mb-3\"], [1, \"text-900\", \"text-3xl\", \"font-medium\", \"mb-3\"], [1, \"text-600\", \"font-medium\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"email1\", 1, \"block\", \"text-900\", \"text-xl\", \"font-medium\", \"mb-2\"], [\"id\", \"email1\", \"type\", \"text\", \"placeholder\", \"Email address\", \"formControlName\", \"email\", 1, \"w-full\", \"md:w-30rem\", \"mb-5\", 2, \"padding\", \"1rem\"], [\"for\", \"password1\", 1, \"block\", \"text-900\", \"font-medium\", \"text-xl\", \"mb-2\"], [\"id\", \"password1\", \"type\", \"password\", \"placeholder\", \"Password\", \"formControlName\", \"password\", 1, \"w-full\", \"p-3\", \"md:w-30rem\", \"mb-5\"], [1, \"flex\", \"align-items-center\", \"justify-content-between\", \"mb-5\", \"gap-5\"], [1, \"flex\", \"align-items-center\"], [\"id\", \"rememberme1\", \"type\", \"checkbox\", 1, \"mr-2\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"rememberme1\"], [\"href\", \"#\", 1, \"font-medium\", \"no-underline\", \"ml-2\", \"text-right\", 2, \"color\", \"var(--primary-color)\"], [\"type\", \"submit\", \"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Sign In\", 1, \"w-full\", \"p-3\", \"text-xl\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4);\n        i0.ɵɵelement(5, \"img\", 5);\n        i0.ɵɵelementStart(6, \"div\", 6);\n        i0.ɵɵtext(7, \"Welcome, Isabel!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"span\", 7);\n        i0.ɵɵtext(9, \"Sign in to continue\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\")(11, \"form\", 8);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_11_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵelementStart(12, \"label\", 9);\n        i0.ɵɵtext(13, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 10);\n        i0.ɵɵelementStart(15, \"label\", 11);\n        i0.ɵɵtext(16, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 12);\n        i0.ɵɵelementStart(18, \"div\", 13)(19, \"div\", 14)(20, \"input\", 15);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_20_listener($event) {\n          return ctx.rememberMe = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"label\", 16);\n        i0.ɵɵtext(22, \"Remember me\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"a\", 17);\n        i0.ɵɵtext(24, \"Forgot password?\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(25, \"button\", 18);\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngModel\", ctx.rememberMe);\n      }\n    },\n    dependencies: [i4.ButtonDirective, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.CheckboxControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.NgModel, i1.FormGroupDirective, i1.FormControlName],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["Validators","LoginComponent","constructor","formBuilder","authService","router","rememberMe","ngOnInit","loginForm","group","email","required","password","form","controls","login","invalid","value","subscribe","response","token","saveDataAdmin","localStorage","setItem","navigate","error","console","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthAdminService","i3","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_11_listener","LoginComponent_Template_input_ngModelChange_20_listener","$event","ɵɵadvance","ɵɵproperty"],"sources":["D:\\systemConfig\\me\\khalid\\virtual-Iteam\\src\\app\\demo\\components\\auth\\login\\login.component.ts","D:\\systemConfig\\me\\khalid\\virtual-Iteam\\src\\app\\demo\\components\\auth\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthAdminService } from 'src/app/demo/service/auth-admin.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent implements OnInit {\n  loginForm!: FormGroup;\n  rememberMe: boolean = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthAdminService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]],\n    });\n  }\n\n  get form() {\n    return this.loginForm.controls;\n  }\n\n  login() {\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.authService.login(this.loginForm.value).subscribe(\n      (response: any) => {\n        // Assuming the response contains a token upon successful login\n        const token = response.token;\n        this.authService.saveDataAdmin(token)\n\n        // Store token in local storage or session storage for future requests\n        localStorage.setItem('token', token);\n        // Redirect to home page or any other desired route\n        this.router.navigate(['/']);\n      },\n      (error: any) => {\n        // Handle login error\n        console.error(error);\n        // Optionally display error message to user\n      }\n    );\n  }\n}\n","<div class=\"surface-ground flex align-items-center justify-content-center min-h-screen min-w-screen overflow-hidden\">\n    <div class=\"flex flex-column align-items-center justify-content-center\">\n        <div style=\"border-radius:56px; padding:0.3rem; background: linear-gradient(180deg, var(--primary-color) 10%, rgba(33, 150, 243, 0) 30%);\">\n            <div class=\"w-full surface-card py-8 px-5 sm:px-8\" style=\"border-radius:53px\">\n                <div class=\"text-center mb-5\">\n                    <img src=\"assets/demo/images/login/avatar.png\" alt=\"Image\" height=\"50\" class=\"mb-3\">\n                    <div class=\"text-900 text-3xl font-medium mb-3\">Welcome, Isabel!</div>\n                    <span class=\"text-600 font-medium\">Sign in to continue</span>\n                </div>\n\n                <div>\n                    <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n                        <label for=\"email1\" class=\"block text-900 text-xl font-medium mb-2\">Email</label>\n                        <input id=\"email1\" type=\"text\" placeholder=\"Email address\" formControlName=\"email\" class=\"w-full md:w-30rem mb-5\" style=\"padding:1rem\">\n\n                        <label for=\"password1\" class=\"block text-900 font-medium text-xl mb-2\">Password</label>\n                        <input id=\"password1\" type=\"password\" placeholder=\"Password\" formControlName=\"password\" class=\"w-full p-3 md:w-30rem mb-5\">\n\n                        <div class=\"flex align-items-center justify-content-between mb-5 gap-5\">\n                            <div class=\"flex align-items-center\">\n                                <input id=\"rememberme1\" type=\"checkbox\" [(ngModel)]=\"rememberMe\" class=\"mr-2\">\n                                <label for=\"rememberme1\">Remember me</label>\n                            </div>\n                            <a href=\"#\" class=\"font-medium no-underline ml-2 text-right\" style=\"color: var(--primary-color)\">Forgot password?</a>\n                        </div>\n                        <button type=\"submit\" pButton pRipple label=\"Sign In\" class=\"w-full p-3 text-xl\"></button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;AAQnE,OAAM,MAAOC,cAAc;EAIzBC,YACUC,WAAwB,EACxBC,WAA6B,EAC7BC,MAAc;IAFd,KAAAF,WAAW,GAAXA,WAAW;IACX,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;IALhB,KAAAC,UAAU,GAAY,KAAK;EAMxB;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACL,WAAW,CAACM,KAAK,CAAC;MACtCC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACW,QAAQ,EAAEX,UAAU,CAACU,KAAK,CAAC,CAAC;MACpDE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACZ,UAAU,CAACW,QAAQ,CAAC;KACrC,CAAC;EACJ;EAEA,IAAIE,IAAIA,CAAA;IACN,OAAO,IAAI,CAACL,SAAS,CAACM,QAAQ;EAChC;EAEAC,KAAKA,CAAA;IACH,IAAI,IAAI,CAACP,SAAS,CAACQ,OAAO,EAAE;MAC1B;;IAGF,IAAI,CAACZ,WAAW,CAACW,KAAK,CAAC,IAAI,CAACP,SAAS,CAACS,KAAK,CAAC,CAACC,SAAS,CACnDC,QAAa,IAAI;MAChB;MACA,MAAMC,KAAK,GAAGD,QAAQ,CAACC,KAAK;MAC5B,IAAI,CAAChB,WAAW,CAACiB,aAAa,CAACD,KAAK,CAAC;MAErC;MACAE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,KAAK,CAAC;MACpC;MACA,IAAI,CAACf,MAAM,CAACmB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC,EACAC,KAAU,IAAI;MACb;MACAC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpB;IACF,CAAC,CACF;EACH;EAAC,QAAAE,CAAA,G;qBA3CU1B,cAAc,EAAA2B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,gBAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdnC,cAAc;IAAAoC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT3Bf,EAAA,CAAAiB,cAAA,aAAqH;QAKjGjB,EAAA,CAAAkB,SAAA,aAAoF;QACpFlB,EAAA,CAAAiB,cAAA,aAAgD;QAAAjB,EAAA,CAAAmB,MAAA,uBAAgB;QAAAnB,EAAA,CAAAoB,YAAA,EAAM;QACtEpB,EAAA,CAAAiB,cAAA,cAAmC;QAAAjB,EAAA,CAAAmB,MAAA,0BAAmB;QAAAnB,EAAA,CAAAoB,YAAA,EAAO;QAGjEpB,EAAA,CAAAiB,cAAA,WAAK;QAC6BjB,EAAA,CAAAqB,UAAA,sBAAAC,kDAAA;UAAA,OAAYN,GAAA,CAAA7B,KAAA,EAAO;QAAA,EAAC;QAC9Ca,EAAA,CAAAiB,cAAA,gBAAoE;QAAAjB,EAAA,CAAAmB,MAAA,aAAK;QAAAnB,EAAA,CAAAoB,YAAA,EAAQ;QACjFpB,EAAA,CAAAkB,SAAA,iBAAuI;QAEvIlB,EAAA,CAAAiB,cAAA,iBAAuE;QAAAjB,EAAA,CAAAmB,MAAA,gBAAQ;QAAAnB,EAAA,CAAAoB,YAAA,EAAQ;QACvFpB,EAAA,CAAAkB,SAAA,iBAA2H;QAE3HlB,EAAA,CAAAiB,cAAA,eAAwE;QAExBjB,EAAA,CAAAqB,UAAA,2BAAAE,wDAAAC,MAAA;UAAA,OAAAR,GAAA,CAAAtC,UAAA,GAAA8C,MAAA;QAAA,EAAwB;QAAhExB,EAAA,CAAAoB,YAAA,EAA8E;QAC9EpB,EAAA,CAAAiB,cAAA,iBAAyB;QAAAjB,EAAA,CAAAmB,MAAA,mBAAW;QAAAnB,EAAA,CAAAoB,YAAA,EAAQ;QAEhDpB,EAAA,CAAAiB,cAAA,aAAiG;QAAAjB,EAAA,CAAAmB,MAAA,wBAAgB;QAAAnB,EAAA,CAAAoB,YAAA,EAAI;QAEzHpB,EAAA,CAAAkB,SAAA,kBAA0F;QAC9FlB,EAAA,CAAAoB,YAAA,EAAO;;;QAfDpB,EAAA,CAAAyB,SAAA,IAAuB;QAAvBzB,EAAA,CAAA0B,UAAA,cAAAV,GAAA,CAAApC,SAAA,CAAuB;QASuBoB,EAAA,CAAAyB,SAAA,GAAwB;QAAxBzB,EAAA,CAAA0B,UAAA,YAAAV,GAAA,CAAAtC,UAAA,CAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}