{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, HostListener } from '@angular/core';\nexport let LandingComponent = class LandingComponent {\n  constructor(layoutService, router) {\n    this.layoutService = layoutService;\n    this.router = router;\n    this.isNavbarShrunk = false;\n    this.block1 = `\n  <div class=\"grid grid-nogutter surface-section text-800\">\n      <div class=\"col-12 md:col-6 p-6 text-center md:text-left flex align-items-center \">\n          <section>\n              <span class=\"block text-6xl font-bold mb-1\">Create the screens your</span>\n              <div class=\"text-6xl text-primary font-bold mb-3\">visitors deserve to see</div>\n              <p class=\"mt-0 mb-4 text-700 line-height-3\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n  \n              <button pButton pRipple label=\"Learn More\" type=\"button\" class=\"mr-3 p-button-raised\"></button>\n              <button pButton pRipple label=\"Live Demo\" type=\"button\" class=\"p-button-outlined\"></button>\n          </section>\n      </div>\n      <div class=\"col-12 md:col-6 overflow-hidden\">\n          <img src=\"assets/demo/images/blocks/hero/hero-1.png\" alt=\"Image\" class=\"md:ml-auto block md:h-full\" style=\"clip-path: polygon(8% 0, 100% 0%, 100% 100%, 0 100%)\">\n      </div>\n  </div>`;\n    this.isHeaderScrolled = false;\n    this.languages = ['fr-FR', 'en-US'];\n    this.resp = true;\n    this.mobile = false;\n    this.close = false;\n    this.class1 = 'navbar navbar-mobile';\n  }\n  onWindowScroll(event) {\n    if (window.pageYOffset > 50) {\n      this.isHeaderScrolled = true;\n    } else {\n      this.isHeaderScrolled = false;\n    }\n  }\n  ngOnInit() {\n    this.getScreenWidth = window.innerWidth;\n    this.getScreenHeight = window.innerHeight;\n    // this.onWindowResize()\n    //set default language \n    this.lang = localStorage.getItem('langue' || 'fr');\n  }\n  myMethod(l) {\n    console.log(l);\n    localStorage.setItem('langue', l);\n    this.translateService.use(l);\n  }\n  // @HostListener('window:resize', ['$event'])\n  // onWindowResize() {\n  //   this.getScreenWidth = window.innerWidth;\n  //   this.getScreenHeight = window.innerHeight;\n  //   console.log(this.getScreenHeight,this.getScreenWidth)\n  //   if(this.getScreenWidth<994){\n  //     this.mobile=true\n  //     console.log(this.mobile)\n  //   }\n  //   else ( this.mobile=false)\n  //   console.log(this.mobile)\n  // }\n  responsive() {\n    console.log(\"mobile mode\");\n    this.resp = !this.resp;\n  }\n  getSomeClass() {\n    if (this.resp == false) {\n      return '';\n    }\n  }\n  changeLan(event) {\n    console.log(event.target.value);\n    localStorage.setItem('langue', event.target.value);\n    // window.location.reload();\n  }\n\n  closeNavbar() {\n    this.resp = true;\n  }\n};\n__decorate([HostListener('window:scroll', ['$event'])], LandingComponent.prototype, \"onWindowScroll\", null);\nLandingComponent = __decorate([Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html'\n})], LandingComponent);","map":{"version":3,"names":["Component","HostListener","LandingComponent","constructor","layoutService","router","isNavbarShrunk","block1","isHeaderScrolled","languages","resp","mobile","close","class1","onWindowScroll","event","window","pageYOffset","ngOnInit","getScreenWidth","innerWidth","getScreenHeight","innerHeight","lang","localStorage","getItem","myMethod","l","console","log","setItem","translateService","use","responsive","getSomeClass","changeLan","target","value","closeNavbar","__decorate","selector","templateUrl"],"sources":["D:\\systemConfig\\me\\sakai-ng-16.0.0\\src\\app\\demo\\components\\view\\landing\\landing.component.ts"],"sourcesContent":["import { Component, HostListener } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LayoutService } from 'src/app/layout/service/app.layout.service';\n\n@Component({\n    selector: 'app-landing',\n    templateUrl: './landing.component.html'\n})\nexport class LandingComponent {\n  isNavbarShrunk = false;\n  block1: string = `\n  <div class=\"grid grid-nogutter surface-section text-800\">\n      <div class=\"col-12 md:col-6 p-6 text-center md:text-left flex align-items-center \">\n          <section>\n              <span class=\"block text-6xl font-bold mb-1\">Create the screens your</span>\n              <div class=\"text-6xl text-primary font-bold mb-3\">visitors deserve to see</div>\n              <p class=\"mt-0 mb-4 text-700 line-height-3\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n  \n              <button pButton pRipple label=\"Learn More\" type=\"button\" class=\"mr-3 p-button-raised\"></button>\n              <button pButton pRipple label=\"Live Demo\" type=\"button\" class=\"p-button-outlined\"></button>\n          </section>\n      </div>\n      <div class=\"col-12 md:col-6 overflow-hidden\">\n          <img src=\"assets/demo/images/blocks/hero/hero-1.png\" alt=\"Image\" class=\"md:ml-auto block md:h-full\" style=\"clip-path: polygon(8% 0, 100% 0%, 100% 100%, 0 100%)\">\n      </div>\n  </div>`;\n  constructor(public layoutService: LayoutService, public router: Router) { }\n\n  isHeaderScrolled: boolean = false;\nlang;\nlanguages=['fr-FR','en-US']\nresp=true;\n\n\n  @HostListener('window:scroll', ['$event'])\n  onWindowScroll(event: any) {\n    if (window.pageYOffset > 50) {\n      this.isHeaderScrolled = true;\n    } else {\n      this.isHeaderScrolled = false;\n    }\n  }\n\n\n\n  // @HostListener('window:scroll', ['$event']) onScrollEvent($event){\n  //   console.log($event);\n  //   console.log(\"scrolling\");\n  // } \n  public getScreenWidth: any;\n  public getScreenHeight: any;\n  mobile:boolean=false;\n  close:boolean=false;\n class1='navbar navbar-mobile'\n  class2:string\n\n  ngOnInit() {\n      this.getScreenWidth = window.innerWidth;\n      this.getScreenHeight = window.innerHeight;\n      // this.onWindowResize()\n\n      //set default language \n      this.lang=localStorage.getItem('langue'||'fr')\n  }\n  myMethod(l) {\n    console.log(l);\n    localStorage.setItem('langue',l);\n    this.translateService.use(l)\n  }\n\n\n  \n  // @HostListener('window:resize', ['$event'])\n  // onWindowResize() {\n  //   this.getScreenWidth = window.innerWidth;\n  //   this.getScreenHeight = window.innerHeight;\n  //   console.log(this.getScreenHeight,this.getScreenWidth)\n  //   if(this.getScreenWidth<994){\n  //     this.mobile=true\n  //     console.log(this.mobile)\n  //   }\n  //   else ( this.mobile=false)\n  //   console.log(this.mobile)\n\n  // }\n  responsive(){\n    console.log(\"mobile mode\")\n    this.resp=!this.resp\n\n  }\n  getSomeClass(){\n    if (this.resp==false){\n      return ''\n    }\n\n  }\n\n\n  changeLan(event){\n    console.log(event.target.value)\n    localStorage.setItem('langue',event.target.value);\n    // window.location.reload();\n\n  }\n\n  closeNavbar() {\n    this.resp = true;\n  }\n   \n}\n\n\n\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,YAAY,QAAQ,eAAe;AAQhD,WAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAkB3BC,YAAmBC,aAA4B,EAASC,MAAc;IAAnD,KAAAD,aAAa,GAAbA,aAAa;IAAwB,KAAAC,MAAM,GAANA,MAAM;IAjB9D,KAAAC,cAAc,GAAG,KAAK;IACtB,KAAAC,MAAM,GAAW;;;;;;;;;;;;;;;SAeV;IAGP,KAAAC,gBAAgB,GAAY,KAAK;IAEnC,KAAAC,SAAS,GAAC,CAAC,OAAO,EAAC,OAAO,CAAC;IAC3B,KAAAC,IAAI,GAAC,IAAI;IAoBP,KAAAC,MAAM,GAAS,KAAK;IACpB,KAAAC,KAAK,GAAS,KAAK;IACpB,KAAAC,MAAM,GAAC,sBAAsB;EA3B8C;EAS1EC,cAAcA,CAACC,KAAU;IACvB,IAAIC,MAAM,CAACC,WAAW,GAAG,EAAE,EAAE;MAC3B,IAAI,CAACT,gBAAgB,GAAG,IAAI;KAC7B,MAAM;MACL,IAAI,CAACA,gBAAgB,GAAG,KAAK;;EAEjC;EAeAU,QAAQA,CAAA;IACJ,IAAI,CAACC,cAAc,GAAGH,MAAM,CAACI,UAAU;IACvC,IAAI,CAACC,eAAe,GAAGL,MAAM,CAACM,WAAW;IACzC;IAEA;IACA,IAAI,CAACC,IAAI,GAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,IAAE,IAAI,CAAC;EAClD;EACAC,QAAQA,CAACC,CAAC;IACRC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;IACdH,YAAY,CAACM,OAAO,CAAC,QAAQ,EAACH,CAAC,CAAC;IAChC,IAAI,CAACI,gBAAgB,CAACC,GAAG,CAACL,CAAC,CAAC;EAC9B;EAIA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACAM,UAAUA,CAAA;IACRL,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1B,IAAI,CAACnB,IAAI,GAAC,CAAC,IAAI,CAACA,IAAI;EAEtB;EACAwB,YAAYA,CAAA;IACV,IAAI,IAAI,CAACxB,IAAI,IAAE,KAAK,EAAC;MACnB,OAAO,EAAE;;EAGb;EAGAyB,SAASA,CAACpB,KAAK;IACba,OAAO,CAACC,GAAG,CAACd,KAAK,CAACqB,MAAM,CAACC,KAAK,CAAC;IAC/Bb,YAAY,CAACM,OAAO,CAAC,QAAQ,EAACf,KAAK,CAACqB,MAAM,CAACC,KAAK,CAAC;IACjD;EAEF;;EAEAC,WAAWA,CAAA;IACT,IAAI,CAAC5B,IAAI,GAAG,IAAI;EAClB;CAED;AA1EC6B,UAAA,EADCtC,YAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC,C,qDAOzC;AAjCUC,gBAAgB,GAAAqC,UAAA,EAJ5BvC,SAAS,CAAC;EACPwC,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE;CAChB,CAAC,C,EACWvC,gBAAgB,CAqG5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}