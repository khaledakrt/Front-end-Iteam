{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./service/app.layout.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nconst _c0 = [\"menubutton\"];\nconst _c1 = [\"topbarmenubutton\"];\nconst _c2 = [\"topbarmenu\"];\nfunction AppTopBarComponent_p_button_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-button\", 12);\n    i0.ɵɵlistener(\"click\", function AppTopBarComponent_p_button_11_Template_p_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.changeTheme(\"md-dark-indigo\", \"dark\"));\n    });\n    i0.ɵɵelement(1, \"i\", 13);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppTopBarComponent_p_button_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-button\", 12);\n    i0.ɵɵlistener(\"click\", function AppTopBarComponent_p_button_12_Template_p_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.changeTheme(\"md-light-indigo\", \"light\"));\n    });\n    i0.ɵɵelement(1, \"i\", 14);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c3 = function (a0) {\n  return {\n    \"layout-topbar-menu-mobile-active\": a0\n  };\n};\nexport let AppTopBarComponent = /*#__PURE__*/(() => {\n  class AppTopBarComponent {\n    constructor(layoutService) {\n      this.layoutService = layoutService;\n      this.isDarkMode = false;\n    }\n    changeTheme(theme, colorScheme) {\n      this.isDarkMode = !this.isDarkMode;\n      const themeLink = document.getElementById('theme-css');\n      const newHref = themeLink.getAttribute('href').replace(this.layoutService.config.theme, theme);\n      this.layoutService.config.colorScheme;\n      this.replaceThemeLink(newHref, () => {\n        this.layoutService.config.theme = theme;\n        this.layoutService.config.colorScheme = colorScheme;\n        this.layoutService.onConfigUpdate();\n      });\n    }\n    replaceThemeLink(href, onComplete) {\n      const id = 'theme-css';\n      const themeLink = document.getElementById('theme-css');\n      const cloneLinkElement = themeLink.cloneNode(true);\n      cloneLinkElement.setAttribute('href', href);\n      cloneLinkElement.setAttribute('id', id + '-clone');\n      themeLink.parentNode.insertBefore(cloneLinkElement, themeLink.nextSibling);\n      cloneLinkElement.addEventListener('load', () => {\n        themeLink.remove();\n        cloneLinkElement.setAttribute('id', id);\n        onComplete();\n      });\n    }\n    static #_ = this.ɵfac = function AppTopBarComponent_Factory(t) {\n      return new (t || AppTopBarComponent)(i0.ɵɵdirectiveInject(i1.LayoutService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppTopBarComponent,\n      selectors: [[\"app-topbar\"]],\n      viewQuery: function AppTopBarComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n          i0.ɵɵviewQuery(_c1, 5);\n          i0.ɵɵviewQuery(_c2, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.menuButton = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.topbarMenuButton = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.menu = _t.first);\n        }\n      },\n      decls: 13,\n      vars: 5,\n      consts: [[1, \"layout-topbar\"], [\"routerLink\", \"\", 1, \"layout-topbar-logo\"], [\"src\", \"assets/layout/images/logo2.png\", \"alt\", \"logo\"], [1, \"p-link\", \"layout-menu-button\", \"layout-topbar-button\", 3, \"click\"], [\"menubutton\", \"\"], [1, \"pi\", \"pi-bars\"], [1, \"p-link\", \"layout-topbar-menu-button\", \"layout-topbar-button\", 3, \"click\"], [\"topbarmenubutton\", \"\"], [1, \"pi\", \"pi-ellipsis-v\"], [1, \"layout-topbar-menu\", 3, \"ngClass\"], [\"topbarmenu\", \"\"], [3, \"click\", 4, \"ngIf\"], [3, \"click\"], [1, \"pi\", \"pi-moon\"], [1, \"pi\", \"pi-sun\"]],\n      template: function AppTopBarComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"a\", 1);\n          i0.ɵɵelement(2, \"img\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"button\", 3, 4);\n          i0.ɵɵlistener(\"click\", function AppTopBarComponent_Template_button_click_3_listener() {\n            return ctx.layoutService.onMenuToggle();\n          });\n          i0.ɵɵelement(5, \"i\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"button\", 6, 7);\n          i0.ɵɵlistener(\"click\", function AppTopBarComponent_Template_button_click_6_listener() {\n            return ctx.layoutService.showProfileSidebar();\n          });\n          i0.ɵɵelement(8, \"i\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\", 9, 10);\n          i0.ɵɵtemplate(11, AppTopBarComponent_p_button_11_Template, 2, 0, \"p-button\", 11);\n          i0.ɵɵtemplate(12, AppTopBarComponent_p_button_12_Template, 2, 0, \"p-button\", 11);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c3, ctx.layoutService.state.profileSidebarVisible));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isDarkMode);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isDarkMode);\n        }\n      },\n      dependencies: [i2.NgClass, i2.NgIf, i3.RouterLink],\n      encapsulation: 2\n    });\n  }\n  return AppTopBarComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}