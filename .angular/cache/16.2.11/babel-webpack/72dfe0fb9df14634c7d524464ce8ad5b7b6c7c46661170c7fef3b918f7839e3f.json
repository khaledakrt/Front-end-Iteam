{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let AuthComponent = class AuthComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.isTeacher = false; // Default to student role\n  }\n\n  ngOnInit() {\n    // Initialize form groups\n    this.studentLoginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n    this.teacherLoginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n    this.studentRegisterForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      lastname: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n    this.teacherRegisterForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      lastname: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n      specialization: ['', Validators.required]\n    });\n  }\n  toggleRole(role) {\n    this.isTeacher = role === 'teacher';\n  }\n  studentLogin() {\n    // Implement student login logic here\n  }\n  teacherLogin() {\n    // Implement teacher login logic here\n  }\n  studentRegister() {\n    // Implement student registration logic here\n  }\n  teacherRegister() {\n    // Implement teacher registration logic here\n  }\n};\nAuthComponent = __decorate([Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})], AuthComponent);","map":{"version":3,"names":["Component","Validators","AuthComponent","constructor","formBuilder","isTeacher","ngOnInit","studentLoginForm","group","email","required","password","teacherLoginForm","studentRegisterForm","name","lastname","teacherRegisterForm","specialization","toggleRole","role","studentLogin","teacherLogin","studentRegister","teacherRegister","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\systemConfig\\me\\medin2024-tailwind\\src\\app\\demo\\components\\view\\auth-dialog\\auth-dialog.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n  isTeacher: boolean = false; // Default to student role\n  studentLoginForm: FormGroup;\n  teacherLoginForm: FormGroup;\n  studentRegisterForm: FormGroup;\n  teacherRegisterForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    // Initialize form groups\n    this.studentLoginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n\n    this.teacherLoginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n\n    this.studentRegisterForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      lastname: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n\n    this.teacherRegisterForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      lastname: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n      specialization: ['', Validators.required]\n    });\n  }\n\n  toggleRole(role: string) {\n    this.isTeacher = role === 'teacher';\n  }\n\n  studentLogin() {\n    // Implement student login logic here\n  }\n\n  teacherLogin() {\n    // Implement teacher login logic here\n  }\n\n  studentRegister() {\n    // Implement student registration logic here\n  }\n\n  teacherRegister() {\n    // Implement teacher registration logic here\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAiCC,UAAU,QAAQ,gBAAgB;AAO5D,WAAMC,aAAa,GAAnB,MAAMA,aAAa;EAOxBC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAN/B,KAAAC,SAAS,GAAY,KAAK,CAAC,CAAC;EAMoB;;EAEhDC,QAAQA,CAAA;IACN;IACA,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MAC7CC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACR,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACQ,KAAK,CAAC,CAAC;MACpDE,QAAQ,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACS,QAAQ;KACnC,CAAC;IAEF,IAAI,CAACE,gBAAgB,GAAG,IAAI,CAACR,WAAW,CAACI,KAAK,CAAC;MAC7CC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACR,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACQ,KAAK,CAAC,CAAC;MACpDE,QAAQ,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACS,QAAQ;KACnC,CAAC;IAEF,IAAI,CAACG,mBAAmB,GAAG,IAAI,CAACT,WAAW,CAACI,KAAK,CAAC;MAChDM,IAAI,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACS,QAAQ,CAAC;MAC/BK,QAAQ,EAAE,CAAC,EAAE,EAAEd,UAAU,CAACS,QAAQ,CAAC;MACnCD,KAAK,EAAE,CAAC,EAAE,EAAE,CAACR,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACQ,KAAK,CAAC,CAAC;MACpDE,QAAQ,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACS,QAAQ;KACnC,CAAC;IAEF,IAAI,CAACM,mBAAmB,GAAG,IAAI,CAACZ,WAAW,CAACI,KAAK,CAAC;MAChDM,IAAI,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACS,QAAQ,CAAC;MAC/BK,QAAQ,EAAE,CAAC,EAAE,EAAEd,UAAU,CAACS,QAAQ,CAAC;MACnCD,KAAK,EAAE,CAAC,EAAE,EAAE,CAACR,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACQ,KAAK,CAAC,CAAC;MACpDE,QAAQ,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACS,QAAQ,CAAC;MACnCO,cAAc,EAAE,CAAC,EAAE,EAAEhB,UAAU,CAACS,QAAQ;KACzC,CAAC;EACJ;EAEAQ,UAAUA,CAACC,IAAY;IACrB,IAAI,CAACd,SAAS,GAAGc,IAAI,KAAK,SAAS;EACrC;EAEAC,YAAYA,CAAA;IACV;EAAA;EAGFC,YAAYA,CAAA;IACV;EAAA;EAGFC,eAAeA,CAAA;IACb;EAAA;EAGFC,eAAeA,CAAA;IACb;EAAA;CAEH;AAxDYrB,aAAa,GAAAsB,UAAA,EALzBxB,SAAS,CAAC;EACTyB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACWzB,aAAa,CAwDzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}