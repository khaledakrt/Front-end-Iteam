{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./service/app.layout.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nconst _c0 = [\"menubutton\"];\nconst _c1 = [\"topbarmenubutton\"];\nconst _c2 = [\"topbarmenu\"];\nfunction AppTopBarComponent_i_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 16);\n  }\n}\nconst _c3 = function (a0) {\n  return {\n    \"layout-topbar-menu-mobile-active\": a0\n  };\n};\nexport class AppTopBarComponent {\n  constructor(layoutService) {\n    this.layoutService = layoutService;\n    this.isDarkMode = false;\n  }\n  changeTheme(theme, colorScheme) {\n    this.isDarkMode = !this.isDarkMode;\n    const themeLink = document.getElementById('theme-css');\n    const newHref = themeLink.getAttribute('href').replace(this.layoutService.config.theme, theme);\n    this.layoutService.config.colorScheme;\n    this.replaceThemeLink(newHref, () => {\n      this.layoutService.config.theme = theme;\n      this.layoutService.config.colorScheme = colorScheme;\n      this.layoutService.onConfigUpdate();\n    });\n  }\n  replaceThemeLink(href, onComplete) {\n    const id = 'theme-css';\n    const themeLink = document.getElementById('theme-css');\n    const cloneLinkElement = themeLink.cloneNode(true);\n    cloneLinkElement.setAttribute('href', href);\n    cloneLinkElement.setAttribute('id', id + '-clone');\n    themeLink.parentNode.insertBefore(cloneLinkElement, themeLink.nextSibling);\n    cloneLinkElement.addEventListener('load', () => {\n      themeLink.remove();\n      cloneLinkElement.setAttribute('id', id);\n      onComplete();\n    });\n  }\n  static #_ = this.ɵfac = function AppTopBarComponent_Factory(t) {\n    return new (t || AppTopBarComponent)(i0.ɵɵdirectiveInject(i1.LayoutService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppTopBarComponent,\n    selectors: [[\"app-topbar\"]],\n    viewQuery: function AppTopBarComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.menuButton = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.topbarMenuButton = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.menu = _t.first);\n      }\n    },\n    decls: 19,\n    vars: 4,\n    consts: [[1, \"layout-topbar\"], [\"routerLink\", \"\", 1, \"layout-topbar-logo\"], [\"src\", \"assets/layout/images/logo2.png\", \"alt\", \"logo\"], [1, \"p-link\", \"layout-menu-button\", \"layout-topbar-button\", 3, \"click\"], [\"menubutton\", \"\"], [1, \"pi\", \"pi-bars\"], [1, \"p-link\", \"layout-topbar-menu-button\", \"layout-topbar-button\", 3, \"click\"], [\"topbarmenubutton\", \"\"], [1, \"pi\", \"pi-ellipsis-v\"], [1, \"layout-topbar-menu\", 3, \"ngClass\"], [\"topbarmenu\", \"\"], [3, \"click\"], [1, \"pi\", \"pi-moon\"], [\"class\", \"pi pi-sun\", 4, \"ngIf\"], [1, \"p-link\", \"layout-topbar-button\"], [1, \"pi\", \"pi-user\"], [1, \"pi\", \"pi-sun\"]],\n    template: function AppTopBarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"a\", 1);\n        i0.ɵɵelement(2, \"img\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 3, 4);\n        i0.ɵɵlistener(\"click\", function AppTopBarComponent_Template_button_click_3_listener() {\n          return ctx.layoutService.onMenuToggle();\n        });\n        i0.ɵɵelement(5, \"i\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"button\", 6, 7);\n        i0.ɵɵlistener(\"click\", function AppTopBarComponent_Template_button_click_6_listener() {\n          return ctx.layoutService.showProfileSidebar();\n        });\n        i0.ɵɵelement(8, \"i\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 9, 10)(11, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function AppTopBarComponent_Template_button_click_11_listener() {\n          return ctx.changeTheme(\"md-dark-indigo\", \"dark\");\n        });\n        i0.ɵɵelement(12, \"i\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function AppTopBarComponent_Template_button_click_13_listener() {\n          return ctx.changeTheme(\"md-light-indigo\", \"light\");\n        });\n        i0.ɵɵtemplate(14, AppTopBarComponent_i_14_Template, 1, 0, \"i\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"button\", 14);\n        i0.ɵɵelement(16, \"i\", 15);\n        i0.ɵɵelementStart(17, \"span\");\n        i0.ɵɵtext(18, \"Profile\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c3, ctx.layoutService.state.profileSidebarVisible));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.isDarkMode);\n      }\n    },\n    dependencies: [i2.NgClass, i2.NgIf, i3.RouterLink],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["i0","ɵɵelement","AppTopBarComponent","constructor","layoutService","isDarkMode","changeTheme","theme","colorScheme","themeLink","document","getElementById","newHref","getAttribute","replace","config","replaceThemeLink","onConfigUpdate","href","onComplete","id","cloneLinkElement","cloneNode","setAttribute","parentNode","insertBefore","nextSibling","addEventListener","remove","_","ɵɵdirectiveInject","i1","LayoutService","_2","selectors","viewQuery","AppTopBarComponent_Query","rf","ctx","ɵɵelementStart","ɵɵelementEnd","ɵɵlistener","AppTopBarComponent_Template_button_click_3_listener","onMenuToggle","AppTopBarComponent_Template_button_click_6_listener","showProfileSidebar","AppTopBarComponent_Template_button_click_11_listener","AppTopBarComponent_Template_button_click_13_listener","ɵɵtemplate","AppTopBarComponent_i_14_Template","ɵɵtext","ɵɵadvance","ɵɵproperty","ɵɵpureFunction1","_c3","state","profileSidebarVisible"],"sources":["D:\\systemConfig\\me\\sakai-ng-16.0.0\\src\\app\\layout\\app.topbar.component.ts","D:\\systemConfig\\me\\sakai-ng-16.0.0\\src\\app\\layout\\app.topbar.component.html"],"sourcesContent":["import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { MenuItem } from 'primeng/api';\nimport { LayoutService } from \"./service/app.layout.service\";\n\n@Component({\n    selector: 'app-topbar',\n    templateUrl: './app.topbar.component.html'\n})\nexport class AppTopBarComponent {\n\n    items!: MenuItem[];\n    isDarkMode: boolean = false;\n\n\n    @ViewChild('menubutton') menuButton!: ElementRef;\n\n    @ViewChild('topbarmenubutton') topbarMenuButton!: ElementRef;\n\n    @ViewChild('topbarmenu') menu!: ElementRef;\n\n    constructor(public layoutService: LayoutService) { }\n\n    changeTheme(theme: string, colorScheme: string) {\n        this.isDarkMode= !this.isDarkMode\n        const themeLink = <HTMLLinkElement>document.getElementById('theme-css');\n        const newHref = themeLink.getAttribute('href')!.replace(this.layoutService.config.theme, theme);\n        this.layoutService.config.colorScheme\n        this.replaceThemeLink(newHref, () => {\n            this.layoutService.config.theme = theme;\n            this.layoutService.config.colorScheme = colorScheme;\n            this.layoutService.onConfigUpdate();\n        });\n    }\n\n        replaceThemeLink(href: string, onComplete: Function) {\n        const id = 'theme-css';\n        const themeLink = <HTMLLinkElement>document.getElementById('theme-css');\n        const cloneLinkElement = <HTMLLinkElement>themeLink.cloneNode(true);\n\n        cloneLinkElement.setAttribute('href', href);\n        cloneLinkElement.setAttribute('id', id + '-clone');\n\n        themeLink.parentNode!.insertBefore(cloneLinkElement, themeLink.nextSibling);\n\n        cloneLinkElement.addEventListener('load', () => {\n            themeLink.remove();\n            cloneLinkElement.setAttribute('id', id);\n            onComplete();\n        });\n    }\n}\n","<div class=\"layout-topbar\">\n    <a class=\"layout-topbar-logo\" routerLink=\"\">\n        <!-- <img src=\"assets/layout/images/{{layoutService.config.colorScheme === 'light' ? 'logo-dark' : 'logo-white'}}.svg\" alt=\"logo\"> -->\n        <img src=\"assets/layout/images/logo2.png\" alt=\"logo\">\n\n        <!-- <span>MED'INOUTLOOK</span> -->\n    </a>\n\n    <button #menubutton class=\"p-link layout-menu-button layout-topbar-button\" (click)=\"layoutService.onMenuToggle()\">\n        <i class=\"pi pi-bars\"></i>\n    </button>\n\n    <button #topbarmenubutton class=\"p-link layout-topbar-menu-button layout-topbar-button\" (click)=\"layoutService.showProfileSidebar()\">\n        <i class=\"pi pi-ellipsis-v\"></i>\n    </button>\n\n    \n    \n\n\n    <div #topbarmenu class=\"layout-topbar-menu\" [ngClass]=\"{'layout-topbar-menu-mobile-active': layoutService.state.profileSidebarVisible}\">\n\n\n<button (click)=\"changeTheme('md-dark-indigo', 'dark')\">\n    <i  class=\"pi pi-moon\"></i>\n</button>\n<button (click)=\"changeTheme('md-light-indigo', 'light')\">\n    <i *ngIf=\"isDarkMode\"  class=\"pi pi-sun\"></i>\n\n</button>\n        <button class=\"p-link layout-topbar-button\">\n            <i class=\"pi pi-user\"></i>\n            <span>Profile</span>\n        </button>\n\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}