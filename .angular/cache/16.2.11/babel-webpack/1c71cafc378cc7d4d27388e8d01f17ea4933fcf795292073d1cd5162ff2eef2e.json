{"ast":null,"code":"import { map } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BlogService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3002/api/blog';\n  }\n  getBlogPosts() {\n    return this.http.get(this.apiUrl);\n  }\n  getBlogContent() {\n    return this.http.get(this.apiUrl).pipe(map(response => response && response.content ? response.content : ''));\n  }\n  saveBlogContent(blog) {\n    return this.http.post(this.apiUrl, blog);\n  }\n  updateBlogPost(blogId, blog) {\n    return this.http.put(`${this.apiUrl}/${blogId}`, blog);\n  }\n  deleteBlogPost(blogId) {\n    return this.http.delete(`${this.apiUrl}/${blogId}`);\n  }\n  static #_ = this.ɵfac = function BlogService_Factory(t) {\n    return new (t || BlogService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BlogService,\n    factory: BlogService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["map","BlogService","constructor","http","apiUrl","getBlogPosts","get","getBlogContent","pipe","response","content","saveBlogContent","blog","post","updateBlogPost","blogId","put","deleteBlogPost","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\systemConfig\\me\\medin2024-tailwind\\src\\app\\demo\\service\\blog.service.ts"],"sourcesContent":["// blog.service.ts\r\nimport { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable, map } from \"rxjs\";\r\nimport { Blog } from \"../api/blog\";\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BlogService {\r\n\r\n  private apiUrl = 'http://localhost:3002/api/blog';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n \r\n  getBlogPosts(): Observable<Blog[]> {\r\n    return this.http.get<Blog[]>(this.apiUrl);\r\n  }\r\n\r\n  getBlogContent(): Observable<string> {\r\n    return this.http.get<any>(this.apiUrl).pipe(\r\n      map(response => response && response.content ? response.content : ''),\r\n    );\r\n  }\r\n  \r\n  \r\n\r\n  saveBlogContent(blog: any): Observable<any> {\r\n    return this.http.post(this.apiUrl, blog);\r\n  }\r\n\r\n  updateBlogPost(blogId: string, blog: Blog): Observable<Blog> {\r\n    return this.http.put<Blog>(`${this.apiUrl}/${blogId}`, blog);\r\n  }\r\n\r\n  deleteBlogPost(blogId: string): Observable<any> {\r\n    return this.http.delete(`${this.apiUrl}/${blogId}`);\r\n  }\r\n}"],"mappings":"AAGA,SAAqBA,GAAG,QAAQ,MAAM;;;AAMtC,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,gCAAgC;EAEV;EAGvCC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAS,IAAI,CAACF,MAAM,CAAC;EAC3C;EAEAG,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACJ,IAAI,CAACG,GAAG,CAAM,IAAI,CAACF,MAAM,CAAC,CAACI,IAAI,CACzCR,GAAG,CAACS,QAAQ,IAAIA,QAAQ,IAAIA,QAAQ,CAACC,OAAO,GAAGD,QAAQ,CAACC,OAAO,GAAG,EAAE,CAAC,CACtE;EACH;EAIAC,eAAeA,CAACC,IAAS;IACvB,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAC,IAAI,CAACT,MAAM,EAAEQ,IAAI,CAAC;EAC1C;EAEAE,cAAcA,CAACC,MAAc,EAAEH,IAAU;IACvC,OAAO,IAAI,CAACT,IAAI,CAACa,GAAG,CAAO,GAAG,IAAI,CAACZ,MAAM,IAAIW,MAAM,EAAE,EAAEH,IAAI,CAAC;EAC9D;EAEAK,cAAcA,CAACF,MAAc;IAC3B,OAAO,IAAI,CAACZ,IAAI,CAACe,MAAM,CAAC,GAAG,IAAI,CAACd,MAAM,IAAIW,MAAM,EAAE,CAAC;EACrD;EAAC,QAAAI,CAAA,G;qBA7BUlB,WAAW,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXvB,WAAW;IAAAwB,OAAA,EAAXxB,WAAW,CAAAyB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}